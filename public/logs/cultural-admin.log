2024-07-03 10:01:09 [INFO][com.cultural.CulturalAdminApplication][logStarting][55]-> Starting CulturalAdminApplication using Java 1.8.0_202 on GeneMiniCom with PID 9688 (D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes started by 17673 in D:\Code\myworkspace-java\foxconn-cultural)
2024-07-03 10:01:09 [DEBUG][com.cultural.CulturalAdminApplication][logStarting][56]-> Running with Spring Boot v2.7.13, Spring v5.3.28
2024-07-03 10:01:09 [INFO][com.cultural.CulturalAdminApplication][logStartupProfileInfo][631]-> No active profile set, falling back to 1 default profile: "default"
2024-07-03 10:01:09 [DEBUG][org.springframework.boot.SpringApplication][load][664]-> Loading source class com.cultural.CulturalAdminApplication
2024-07-03 10:01:09 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][prepareRefresh][629]-> Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f
2024-07-03 10:01:09 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2024-07-03 10:01:09 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\aspect\OperationAspect.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\AGlobalExceptionHandlerController.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\FileController.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\LoginController.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysAccountController.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysAreaController.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysColumnController.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysMenuController.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysRoleController.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\entity\config\AdminConfig.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\entity\config\AppConfig.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysAccountServiceImpl.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysAreaServiceImpl.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysColumnServiceImpl.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysMenuServiceImpl.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysRole2MenuServiceImpl.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysRoleServiceImpl.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\utils\FileUtils.class]
2024-07-03 10:01:09 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\utils\ImageUtils.class]
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\BaseMapper.class]
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysAccountMapper.class]
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysAreaMapper.class]
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysColumnMapper.class]
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysMenuMapper.class]
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysRole2MenuMapper.class]
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysRoleMapper.class]
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'baseMapper' and 'com.cultural.mappers.BaseMapper' mapperInterface
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'baseMapper'.
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysAccountMapper' and 'com.cultural.mappers.SysAccountMapper' mapperInterface
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysAccountMapper'.
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysAreaMapper' and 'com.cultural.mappers.SysAreaMapper' mapperInterface
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysAreaMapper'.
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysColumnMapper' and 'com.cultural.mappers.SysColumnMapper' mapperInterface
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysColumnMapper'.
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysMenuMapper' and 'com.cultural.mappers.SysMenuMapper' mapperInterface
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysMenuMapper'.
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRole2MenuMapper' and 'com.cultural.mappers.SysRole2MenuMapper' mapperInterface
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRole2MenuMapper'.
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRoleMapper' and 'com.cultural.mappers.SysRoleMapper' mapperInterface
2024-07-03 10:01:09 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRoleMapper'.
2024-07-03 10:01:09 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][multipleStoresDetected][262]-> Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03 10:01:09 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03 10:01:09 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2024-07-03 10:01:09 [DEBUG][org.springframework.boot.autoconfigure.AutoConfigurationPackages][get][196]-> @EnableAutoConfiguration was declared on a class in the package 'com.cultural'. Automatic @Repository and @Entity scanning is enabled.
2024-07-03 10:01:09 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cultural.
2024-07-03 10:01:09 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.ProxyAsyncConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory][getAdvice][258]-> Found AspectJ method: public void com.cultural.aspect.OperationAspect.interceptorDo(org.aspectj.lang.JoinPoint) throws com.cultural.exception.BusinessException
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionAttributeSource'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionInterceptor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2024-07-03 10:01:10 [DEBUG][org.springframework.ui.context.support.UiApplicationContextUtils][initThemeSource][85]-> Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@38f77cd9]
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageCustomizer'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServletRegistration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServlet'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartConfigElement'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getArchiveFileDocumentRoot][81]-> Code archive: D:\Code\other\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getExplodedWarFileDocumentRoot][125]-> Code archive: D:\Code\other\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getValidDirectory][69]-> Document root: D:\Code\myworkspace-java\foxconn-cultural\public
2024-07-03 10:01:10 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][initialize][108]-> Tomcat initialized with port(s): 9090 (http)
2024-07-03 10:01:10 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Initializing ProtocolHandler ["http-nio-9090"]
2024-07-03 10:01:10 [INFO][org.apache.catalina.core.StandardService][log][173]-> Starting service [Tomcat]
2024-07-03 10:01:10 [INFO][org.apache.catalina.core.StandardEngine][log][173]-> Starting Servlet engine: [Apache Tomcat/9.0.76]
2024-07-03 10:01:10 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring embedded WebApplicationContext
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][286]-> Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-07-03 10:01:10 [INFO][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][292]-> Root WebApplicationContext: initialization completed in 1008 ms
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepositoryFilterRegistration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionRepositoryFilterConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@363f6148'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestContextFilter'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'formContentFilter'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'characterEncodingFilter'
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping filters: springSessionRepositoryFilter urls=[/*] order=-2147483598, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping servlets: dispatcherServlet urls=[/]
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter][init][242]-> Filter 'requestContextFilter' configured for use
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1][init][242]-> Filter 'springSessionRepositoryFilter' configured for use
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter][init][242]-> Filter 'characterEncodingFilter' configured for use
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedFormContentFilter][init][242]-> Filter 'formContentFilter' configured for use
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'culturalAdminApplication'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'operationAspect'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'AGlobalExceptionHandlerController'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'fileController'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'adminConfig'
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'project.folder' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'super.admin.phones' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'admin.account' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'admin.password' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'web.api.url' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'loginController'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountService'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountMapper'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionFactory'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.core.LocalVariableTableParameterNameDiscoverer][inspectClass][105]-> Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3e73418c] - unable to determine constructor/method parameter names
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSource'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-07-03 10:01:10 [DEBUG][com.zaxxer.hikari.HikariConfig][attemptFromContextLoader][971]-> Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2024-07-03 10:01:10 [DEBUG][org.apache.ibatis.logging.LogFactory][setImplementation][135]-> Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2024-07-03 10:01:10 [DEBUG][org.mybatis.spring.SqlSessionFactoryBean][buildSqlSessionFactory][534]-> Property 'mapperLocations' was not specified or no matching resources found
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionTemplate'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuService'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuMapper'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appConfig'
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'project.folder' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'super.admin.phones' in PropertySource 'environmentProperties' with value of type String
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountController'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAreaController'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAreaService'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAreaMapper'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'fileUtils'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysColumnController'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysColumnService'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysColumnMapper'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuController'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleController'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleService'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleMapper'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuMapper'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuService'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'imageUtils'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'baseMapper'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskExecutorBuilder'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'error'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameViewResolver'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'conventionErrorViewResolver'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorAttributes'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'basicErrorController'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@363f6148'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@363f6148'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcConversionService'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcValidator'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'messageConverters'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringHttpMessageConverter'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonObjectMapper'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'parameterNamesModule'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonComponentModule'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonMixinModule'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonGeoModule'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortResolver'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortCustomizer'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableResolver'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableCustomizer'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationTaskExecutor'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2024-07-03 10:01:10 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][initialize][184]-> Initializing ExecutorService 'applicationTaskExecutor'
2024-07-03 10:01:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][625]-> ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeResolver'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'themeResolver'
2024-07-03 10:01:10 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'flashMapManager'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 10:01:11 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.FileController:
	{ [/file/getImage/{imageFolder}/{imageName}]}: readPic(String,String,HttpServletResponse)
	{ [/file/getAvatar/{userId}]}: getAvatar(HttpServletResponse,String)
2024-07-03 10:01:11 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.LoginController:
	{ [/checkCode]}: checkCode(HttpServletResponse,HttpSession)
	{ [/login]}: login(HttpSession,String,String,String)
	{ [/logout]}: logout(HttpSession)
	{ [/updateMyPwd]}: updateMyPwd(HttpSession,String)
2024-07-03 10:01:11 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysAccountController:
	{ [/settings/updateStatus]}: updateStatus(Integer,Integer)
	{ [/settings/saveAccount]}: saveAccount(SysAccount)
	{ [/settings/loadAccountList]}: loadDataList(SysAccountQuery)
	{ [/settings/delAccount]}: delAccount(Integer)
	{ [/settings/updatePassword]}: updatePassword(Integer,String)
2024-07-03 10:01:11 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysAreaController:
	{ [/content/delArea]}: delArea(Integer)
	{ [/content/saveArea]}: saveArea(Integer,String,Integer,Integer,String,Integer,List)
	{ [/content/areaList]}: areaList(SysAreaQuery)
2024-07-03 10:01:11 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysColumnController:
	{ [/content/columnList]}: loadDataList(SysColumnQuery)
	{ [/content/delColumn]}: delMenu(Integer)
	{ [/content/saveColumn]}: saveMenu(SysColumn,MultipartFile)
	{ [/content/opColStatus]}: opColStatus(Integer,Integer)
	{ [/content/loadAllColumn4Select]}: loadAllColumn4Select(Integer)
2024-07-03 10:01:11 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysMenuController:
	{ [/settings/menuList]}: menuList()
	{ [/settings/delMenu]}: delMenu(Integer)
	{ [/settings/saveMenu]}: saveMenu(SysMenu)
2024-07-03 10:01:11 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysRoleController:
	{ [/settings/loadAllRoles]}: loadAllRoles()
	{ [/settings/loadRoles]}: loadRoles(SysRoleQuery)
	{ [/settings/delRole]}: delRole(Integer)
	{ [/settings/saveRole]}: saveRole(SysRole,String,String)
	{ [/settings/getRoleByRoleId]}: getRoleByRoleId(Integer)
	{ [/settings/saveRoleMenu]}: saveRoleMenu(Integer,String,String)
2024-07-03 10:01:11 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-07-03 10:01:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 30 mappings in 'requestMappingHandlerMapping'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPatternParser'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUrlPathHelper'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPathMatcher'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameHandlerMapping'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 10:01:11 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlers][86]-> 'beanNameHandlerMapping' {}
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'routerFunctionMapping'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'resourceHandlerMapping'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 10:01:11 [DEBUG][org.springframework.web.servlet.config.annotation.WebMvcConfigurer][addResourceHandlers][335]-> Default resource handling disabled
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerFunctionAdapter'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerExceptionResolver'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 10:01:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][initExceptionHandlerAdviceCache][307]-> ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcViewResolver'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewNameTranslator'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultViewResolver'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@363f6148'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerViewResolver'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanExporter'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'objectNamingStrategy'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@363f6148'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanServer'
2024-07-03 10:01:11 [DEBUG][org.springframework.jmx.support.JmxUtils][locateMBeanServer][127]-> Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@591f989e
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2024-07-03 10:01:11 [DEBUG][org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin][afterPropertiesSet][131]-> Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationAvailability'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lettuceClientResources'
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.logging.InternalLoggerFactory][useSlf4JLoggerFactory][63]-> Using SLF4J as the default logging framework
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.resource.AddressResolverGroupProvider][<clinit>][37]-> Starting without optional netty's non-blocking DNS resolver library
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<clinit>][122]-> -Dio.netty.eventLoopThreads: 16
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2024-07-03 10:01:11 [DEBUG][io.netty.util.concurrent.GlobalEventExecutor][<clinit>][53]-> -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][100]-> -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][101]-> -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2024-07-03 10:01:11 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][129]-> -Dio.netty.leakDetection.level: simple
2024-07-03 10:01:11 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][130]-> -Dio.netty.leakDetection.targetRecords: 4
2024-07-03 10:01:11 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@e26a3df
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent0][explicitNoUnsafeCause0][497]-> -Dio.netty.noUnsafe: false
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent0][javaVersion0][1001]-> Java version: 8
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][137]-> sun.misc.Unsafe.theUnsafe: available
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][161]-> sun.misc.Unsafe.copyMemory: available
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][193]-> sun.misc.Unsafe.storeFence: available
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][236]-> java.nio.Buffer.address: available
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][308]-> direct buffer constructor: available
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][386]-> java.nio.Bits.unaligned: available, true
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][460]-> jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][483]-> java.nio.DirectByteBuffer.<init>(long, {int,long}): available
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent][unsafeUnavailabilityCause0][1159]-> sun.misc.Unsafe: available
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent][tmpdir0][1289]-> -Dio.netty.tmpdir: C:\Users\17673\AppData\Local\Temp (java.io.tmpdir)
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent][bitMode0][1368]-> -Dio.netty.bitMode: 64 (sun.arch.data.model)
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent][isWindows0][1119]-> Platform: Windows
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][178]-> -Dio.netty.maxDirectMemory: 7098859520 bytes
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][185]-> -Dio.netty.uninitializedArrayAllocationThreshold: -1
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.CleanerJava6][<clinit>][92]-> java.nio.ByteBuffer.cleaner(): available
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][205]-> -Dio.netty.noPreferDirect: false
2024-07-03 10:01:11 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][1010]-> org.jctools-core.MpscChunkedArrayQueue: available
2024-07-03 10:01:11 [DEBUG][reactor.util.Loggers][debug][254]-> Using Slf4j logging framework
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.event.jfr.EventRecorderHolder][<clinit>][55]-> Starting without optional JFR support. JFR unavailable.
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<init>][227]-> LatencyUtils/HdrUtils are not available, metrics are disabled
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConnectionFactory'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisTemplate'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringRedisTemplate'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'java.lang.Object'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lifecycleProcessor'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveRedisTemplate'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'keyValueMappingContext'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisCustomConversions'
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisReferenceResolver'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConverter'
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueAdapter'
2024-07-03 10:01:11 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][start][246]-> Starting RedisMessageListenerContainer...
2024-07-03 10:01:11 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][lazyListen][290]-> Postpone listening for Redis messages until actual listeners are added.
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueTemplate'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfigurer'
2024-07-03 10:01:11 [DEBUG][org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer][getTemplateLoaderForPath][362]-> File system access not preferred: using SpringTemplateLoader
2024-07-03 10:01:11 [DEBUG][org.springframework.ui.freemarker.SpringTemplateLoader][<init>][62]-> SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f, started on Wed Jul 03 10:01:09 GMT+08:00 2024] and template loader path [classpath:/templates/]
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'freeMarkerConfiguration' via factory method to bean named 'freeMarkerConfigurer'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2024-07-03 10:01:11 [WARN][org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration][checkTemplateLocationExists][65]-> Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.check-template-location=false)
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jdbcTemplate'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration' via constructor to bean named 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryImplementationValidator'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryImplementationValidator' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryImplementationValidator' via constructor to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.RedisSessionConfiguration$SpringBootRedisHttpSessionConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cookieSerializer'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'cookieSerializer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'configureRedisAction'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.RedisSessionConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.session.redis-org.springframework.boot.autoconfigure.session.RedisSessionProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'configureRedisAction' via factory method to bean named 'spring.session.redis-org.springframework.boot.autoconfigure.session.RedisSessionProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepository'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'org.springframework.boot.autoconfigure.session.RedisSessionConfiguration$SpringBootRedisHttpSessionConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'sessionRepository'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRedisMessageListenerContainer'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRedisMessageListenerContainer' via factory method to bean named 'sessionRepository'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'enableRedisKeyspaceNotificationsInitializer'
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.RedisClient][connectStandaloneAsync][273]-> Trying to get a Redis connection for: redis://127.0.0.1?timeout=2s
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][157]-> -Dio.netty.allocator.numHeapArenas: 32
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][158]-> -Dio.netty.allocator.numDirectArenas: 32
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][160]-> -Dio.netty.allocator.pageSize: 8192
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][165]-> -Dio.netty.allocator.maxOrder: 9
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][169]-> -Dio.netty.allocator.chunkSize: 4194304
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][170]-> -Dio.netty.allocator.smallCacheSize: 256
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][171]-> -Dio.netty.allocator.normalCacheSize: 64
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][172]-> -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][173]-> -Dio.netty.allocator.cacheTrimInterval: 8192
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][174]-> -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][175]-> -Dio.netty.allocator.useCacheForAllThreads: false
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][176]-> -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][88]-> -Dio.netty.allocator.type: pooled
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][97]-> -Dio.netty.threadLocalDirectBufferSize: 0
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][100]-> -Dio.netty.maxThreadLocalCharBufferSize: 16384
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.resource.KqueueProvider][<clinit>][73]-> Starting without optional kqueue library
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.resource.IOUringProvider][<clinit>][75]-> Starting without optional io_uring library
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.resource.EpollProvider][<clinit>][76]-> Starting without optional epoll library
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][allocate][112]-> Allocating executor io.netty.channel.nio.NioEventLoopGroup
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.channel.nio.NioEventLoopGroup
2024-07-03 10:01:11 [DEBUG][io.netty.channel.MultithreadEventLoopGroup][<clinit>][44]-> -Dio.netty.eventLoopThreads: 32
2024-07-03 10:01:11 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][110]-> -Dio.netty.noKeySetOptimization: false
2024-07-03 10:01:11 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][111]-> -Dio.netty.selectorAutoRebuildThreshold: 512
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][addReference][128]-> Adding reference to io.netty.channel.nio.NioEventLoopGroup@5c997de8, existing ref count 0
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1?timeout=2s
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2024-07-03 10:01:11 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][79]-> -Dio.netty.processId: 9688 (auto-detected)
2024-07-03 10:01:11 [DEBUG][io.netty.util.NetUtil][<clinit>][148]-> -Djava.net.preferIPv4Stack: false
2024-07-03 10:01:11 [DEBUG][io.netty.util.NetUtil][<clinit>][149]-> -Djava.net.preferIPv6Addresses: false
2024-07-03 10:01:11 [DEBUG][io.netty.util.NetUtilInitializations][determineLoopback][145]-> Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2024-07-03 10:01:11 [DEBUG][io.netty.util.NetUtil][run][206]-> Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2024-07-03 10:01:11 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][101]-> -Dio.netty.machineId: 4c:d5:77:ff:fe:f0:e3:c5 (auto-detected)
2024-07-03 10:01:11 [DEBUG][io.netty.util.Recycler][<clinit>][96]-> -Dio.netty.recycler.maxCapacityPerThread: 4096
2024-07-03 10:01:11 [DEBUG][io.netty.util.Recycler][<clinit>][97]-> -Dio.netty.recycler.ratio: 8
2024-07-03 10:01:11 [DEBUG][io.netty.util.Recycler][<clinit>][98]-> -Dio.netty.recycler.chunkSize: 32
2024-07-03 10:01:11 [DEBUG][io.netty.util.Recycler][<clinit>][99]-> -Dio.netty.recycler.blocking: false
2024-07-03 10:01:11 [DEBUG][io.netty.util.Recycler][<clinit>][100]-> -Dio.netty.recycler.batchFastThreadLocalOnly: true
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][63]-> -Dio.netty.buffer.checkAccessible: true
2024-07-03 10:01:11 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][64]-> -Dio.netty.buffer.checkBounds: true
2024-07-03 10:01:11 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1e35efcb
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=AsyncCommand [type=CONFIG, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionEventHttpSessionListenerAdapter'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRepositoryFilter'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRepositoryFilter' via factory method to bean named 'sessionRepository'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$ServletSessionRepositoryConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator' via constructor to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskSchedulerBuilder'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionManager'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionTemplate'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2024-07-03 10:01:11 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartResolver'
2024-07-03 10:01:11 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][434]-> Registering beans for JMX exposure on startup
2024-07-03 10:01:11 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-07-03 10:01:11 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][896]-> Bean with name 'dataSource' has been autodetected for JMX exposure
2024-07-03 10:01:11 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][669]-> Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2024-07-03 10:01:11 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase -2147483647
2024-07-03 10:01:11 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springBootLoggingLifecycle'
2024-07-03 10:01:11 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483646
2024-07-03 10:01:11 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Starting ProtocolHandler ["http-nio-9090"]
2024-07-03 10:01:11 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][start][220]-> Tomcat started on port(s): 9090 (http) with context path '/api'
2024-07-03 10:01:11 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerStartStop'
2024-07-03 10:01:11 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483647
2024-07-03 10:01:11 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][start][246]-> Starting RedisMessageListenerContainer...
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1?timeout=2s
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:11 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][doSubscribe][339]-> Subscribing to topics for RedisMessageListenerContainer.
2024-07-03 10:01:11 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][lambda$doSubscribe$0][324]-> RedisMessageListenerContainer listeners registered successfully.
2024-07-03 10:01:11 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springSessionRedisMessageListenerContainer'
2024-07-03 10:01:11 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerGracefulShutdown'
2024-07-03 10:01:11 [DEBUG][org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener][logAutoConfigurationReport][126]-> 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'freemarker.template.Configuration', 'org.springframework.ui.freemarker.FreeMarkerConfigurationFactory' (OnClassCondition)

   FreeMarkerServletWebConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#freeMarkerConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.freemarker.FreeMarkerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerServletWebConfiguration#freeMarkerViewResolver matched:
      - @ConditionalOnProperty (spring.freemarker.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (names: freeMarkerViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#redisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisSessionConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.core.RedisTemplate', 'org.springframework.session.data.redis.RedisIndexedSessionRepository' (OnClassCondition)
      - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.session.SessionRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisSessionConfiguration#configureRedisAction matched:
      - @ConditionalOnMissingBean (types: org.springframework.session.data.redis.config.ConfigureRedisAction; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SessionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.session.Session' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration#cookieSerializer matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.CookieHttpSessionIdResolverAvailable found non-matching nested conditions @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver, @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.NoComponentsAvailable @ConditionalOnMissingBean (types: org.springframework.session.web.http.HttpSessionIdResolver,org.springframework.session.web.http.CookieSerializer; SearchStrategy: all) did not find any beans (SessionAutoConfiguration.DefaultCookieSerializerCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.ServletSessionRepositoryConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.session.SessionRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SessionRepositoryFilterConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.session.web.http.SessionRepositoryFilter; SearchStrategy: all) found bean 'springSessionRepositoryFilter' (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerNonWebConfiguration:
      Did not match:
         - @ConditionalOnWebApplication found 'session' scope and did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerReactiveWebConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.hazelcast.HazelcastIndexedSessionRepository' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.jdbc.JdbcIndexedSessionRepository' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoOperations' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperFactoryBean' &baseMapper, &sysAccountMapper, &sysAreaMapper, &sysColumnMapper, &sysMenuMapper, &sysRole2MenuMapper, &sysRoleMapper (OnBeanCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NoOpSessionConfiguration:
      Did not match:
         - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration.ReactiveSessionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.RememberMeServicesConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.authentication.RememberMeServices' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.SchedulingConfigurer,org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) found beans of type 'org.springframework.scheduling.annotation.SchedulingConfigurer' org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-07-03 10:01:11 [INFO][org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor][finishRegistration][315]-> No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2024-07-03 10:01:11 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-07-03 10:01:11 [INFO][com.cultural.CulturalAdminApplication][logStarted][61]-> Started CulturalAdminApplication in 2.809 seconds (JVM running for 5.485)
2024-07-03 10:01:11 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state LivenessState changed to CORRECT
2024-07-03 10:01:11 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-07-03 10:01:12 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03 10:01:12 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][525]-> Initializing Servlet 'dispatcherServlet'
2024-07-03 10:01:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][522]-> Detected StandardServletMultipartResolver
2024-07-03 10:01:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][546]-> Detected AcceptHeaderLocaleResolver
2024-07-03 10:01:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][571]-> Detected FixedThemeResolver
2024-07-03 10:01:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][721]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1693ff90
2024-07-03 10:01:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][785]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@57cabdc3
2024-07-03 10:01:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initServletBean][542]-> enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-03 10:01:12 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][547]-> Completed initialization in 0 ms
2024-07-03 10:01:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=Wed%20Jul%2003%202024%2010:01:12%20GMT+0800%20(GMT+08:00)", parameters={masked}
2024-07-03 10:01:12 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 10:01:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2024-07-03 10:01:12 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 10:01:12 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][318]-> A new session was created. To help you troubleshoot where the session was created we provided a StackTrace (this is not an error). You can prevent this from appearing by disabling DEBUG logging for org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER
java.lang.RuntimeException: For debugging purposes only (not an error)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:320)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:332)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:193)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:139)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:124)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PUBLISH, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:01:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=Wed%20Jul%2003%202024%2010:01:14%20GMT+0800%20(GMT+08:00)", parameters={masked}
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/login", parameters={multipart}
2024-07-03 10:01:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.LoginController#login(HttpSession, String, String, String)
2024-07-03 10:01:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:01:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76e27ebe] was not registered for synchronization because synchronization is not active
2024-07-03 10:01:17 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1103]-> HikariCPDatasource - configuration:
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> allowPoolSuspension................................false
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> autoCommit................................true
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> catalog................................none
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionInitSql................................none
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTestQuery................................"SELECT 1"
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTimeout................................30000
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSource................................none
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceClassName................................none
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceJNDI................................none
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceProperties................................{password=<masked>}
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> driverClassName................................"com.mysql.cj.jdbc.Driver"
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> exceptionOverrideClassName................................none
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckProperties................................{}
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckRegistry................................none
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> idleTimeout................................180000
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> initializationFailTimeout................................1
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> isolateInternalQueries................................false
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> jdbcUrl................................jdbc:mysql://127.0.0.1:3306/cultural?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> keepaliveTime................................0
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> leakDetectionThreshold................................0
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maxLifetime................................1800000
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maximumPoolSize................................10
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricRegistry................................none
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricsTrackerFactory................................none
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> minimumIdle................................5
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> password................................<masked>
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> poolName................................"HikariCPDatasource"
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> readOnly................................false
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> registerMbeans................................false
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> scheduledExecutor................................none
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> schema................................none
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> threadFactory................................internal
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> transactionIsolation................................default
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> username................................"root"
2024-07-03 10:01:17 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> validationTimeout................................5000
2024-07-03 10:01:17 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][110]-> HikariCPDatasource - Starting...
2024-07-03 10:01:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][checkFailFast][565]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@5f9a734b
2024-07-03 10:01:18 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][123]-> HikariCPDatasource - Start completed.
2024-07-03 10:01:18 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1336720276 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:01:18 [DEBUG][com.cultural.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==>  Preparing: select user_id,phone,user_name,password,position, status,roles,area,create_time,email from sys_account where phone=? 
2024-07-03 10:01:18 [DEBUG][com.cultural.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==> Parameters: 13026636499(String)
2024-07-03 10:01:18 [DEBUG][com.cultural.mappers.SysAccountMapper.selectByPhone][debug][159]-> <==      Total: 1
2024-07-03 10:01:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76e27ebe]
2024-07-03 10:01:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:01:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7541ae15] was not registered for synchronization because synchronization is not active
2024-07-03 10:01:18 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:01:18 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2056511515 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:01:18 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:01:18 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:01:18 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:01:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7541ae15]
2024-07-03 10:01:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:01:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@31d35ec6]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=1, active=0, idle=1, waiting=0)
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=1, active=0, idle=1, waiting=0)
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@5575426c
2024-07-03 10:01:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@705839e9
2024-07-03 10:01:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@7e06899d
2024-07-03 10:01:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@2ee6f583
2024-07-03 10:01:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After adding stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:01:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 10:01:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:01:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af2ff3a] was not registered for synchronization because synchronization is not active
2024-07-03 10:01:18 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:01:18 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@814855087 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:01:18 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:01:18 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:01:18 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:01:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af2ff3a]
2024-07-03 10:01:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:01:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@668e2fed]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:01:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:01:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e9e9088] was not registered for synchronization because synchronization is not active
2024-07-03 10:01:24 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:01:24 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1731031172 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:01:24 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:01:24 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:01:24 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:01:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e9e9088]
2024-07-03 10:01:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:01:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@1a77d496]
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:01:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:01:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41caffe9] was not registered for synchronization because synchronization is not active
2024-07-03 10:01:25 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:01:25 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1884355271 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:01:25 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:01:25 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:01:25 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:01:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41caffe9]
2024-07-03 10:01:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:01:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5cc38de2]
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:01:39 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:01:39 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58ff915f] was not registered for synchronization because synchronization is not active
2024-07-03 10:01:39 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:01:39 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1892041526 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:01:39 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:01:39 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:01:39 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:01:39 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58ff915f]
2024-07-03 10:01:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:01:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@87b8274]
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:01:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:01:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:01:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:01:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:01:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:02:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:02:00 GMT+08:00 2024
2024-07-03 10:02:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:02:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:02:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:02:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:02:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:02:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:02:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:02:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:02:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:02:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:02:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:03:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:03:00 GMT+08:00 2024
2024-07-03 10:03:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:03:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:03:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:03:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:03:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:03:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:03:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:03:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:03:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:03:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:03:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:04:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:04:00 GMT+08:00 2024
2024-07-03 10:04:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:04:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:04:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:04:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:04:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:04:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:04:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:04:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:04:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:04:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:04:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:05:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:05:00 GMT+08:00 2024
2024-07-03 10:05:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:05:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:05:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:05:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:05:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:05:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:05:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:05:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:05:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:05:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:05:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:06:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:06:00 GMT+08:00 2024
2024-07-03 10:06:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:06:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:06:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:06:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:06:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:06:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:06:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:06:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:06:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:06:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:06:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:07:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:07:00 GMT+08:00 2024
2024-07-03 10:07:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:07:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:07:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:07:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:07:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:07:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:07:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:07:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:07:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:07:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:07:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:08:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:08:00 GMT+08:00 2024
2024-07-03 10:08:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:08:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:08:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:08:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:08:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:08:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:08:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:08:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:08:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:08:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:09:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:09:00 GMT+08:00 2024
2024-07-03 10:09:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:09:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:09:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a54e784] was not registered for synchronization because synchronization is not active
2024-07-03 10:09:03 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:09:03 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@730433176 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:09:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:09:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:09:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:09:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a54e784]
2024-07-03 10:09:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:09:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5396461b]
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:09:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:09:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:09:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:09:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:09:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bba5137] was not registered for synchronization because synchronization is not active
2024-07-03 10:09:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:09:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1587037622 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:09:30 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:09:30 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:09:30 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:09:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bba5137]
2024-07-03 10:09:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:09:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@43a04eca]
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:09:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:09:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f8b5b3f] was not registered for synchronization because synchronization is not active
2024-07-03 10:09:33 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:09:33 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@781067788 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:09:33 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:09:33 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:09:33 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:09:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f8b5b3f]
2024-07-03 10:09:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:09:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@6fa049c9]
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:09:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:09:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:09:54 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:54 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:54 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:09:54 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:09:54 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@643d05ff] was not registered for synchronization because synchronization is not active
2024-07-03 10:09:54 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:09:54 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@862414403 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:09:54 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:09:54 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:09:54 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:09:54 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@643d05ff]
2024-07-03 10:09:54 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:09:54 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@8b65eb]
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:54 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:54 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:54 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:54 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:54 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:54 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:54 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:54 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:54 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:09:56 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:09:56 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad00b4c] was not registered for synchronization because synchronization is not active
2024-07-03 10:09:56 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:09:56 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1058154202 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:09:56 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:09:56 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:09:56 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:09:56 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ad00b4c]
2024-07-03 10:09:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:09:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@29ae993b]
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:09:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:09:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:09:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:10:00 GMT+08:00 2024
2024-07-03 10:10:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:10:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:10:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:10:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:10:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:10:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7808694f] was not registered for synchronization because synchronization is not active
2024-07-03 10:10:37 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:10:37 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1034065895 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:10:37 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:10:37 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:10:37 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:10:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7808694f]
2024-07-03 10:10:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:10:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@52d76ce4]
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:10:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:10:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:10:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:10:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:10:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:11:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:11:00 GMT+08:00 2024
2024-07-03 10:11:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:11:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:11:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:11:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:11:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:11:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:11:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:11:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:11:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:11:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:11:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:12:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:12:00 GMT+08:00 2024
2024-07-03 10:12:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:12:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:12:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@560d6fd] was not registered for synchronization because synchronization is not active
2024-07-03 10:12:16 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:12:16 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1262514320 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:12:16 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:12:16 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:12:16 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:12:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@560d6fd]
2024-07-03 10:12:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:12:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@1d9e92ac]
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:12:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:12:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:12:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:12:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:12:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:12:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:12:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:12:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:13:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:13:00 GMT+08:00 2024
2024-07-03 10:13:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:13:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:13:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:13:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:13:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:13:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:13:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:13:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:13:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:13:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:13:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:14:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:14:00 GMT+08:00 2024
2024-07-03 10:14:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:14:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:14:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:14:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:14:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:14:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:14:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:14:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:14:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:14:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:14:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:15:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:15:00 GMT+08:00 2024
2024-07-03 10:15:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:15:04 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:15:04 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76fb816f] was not registered for synchronization because synchronization is not active
2024-07-03 10:15:04 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:15:04 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@358573967 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:15:04 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:15:04 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:15:04 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:15:04 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76fb816f]
2024-07-03 10:15:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:15:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@48d9191]
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:15:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:15:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:15:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:15:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:15:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e45474e] was not registered for synchronization because synchronization is not active
2024-07-03 10:15:20 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:15:20 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@489327149 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:15:20 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:15:20 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:15:20 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:15:20 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e45474e]
2024-07-03 10:15:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:15:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@b9f785b]
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:15:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:15:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:15:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:15:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:15:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:16:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:16:00 GMT+08:00 2024
2024-07-03 10:16:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:16:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:16:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:16:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:16:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:16:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:16:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:16:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:16:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:16:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:16:50 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:16:50 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45a86da] was not registered for synchronization because synchronization is not active
2024-07-03 10:16:50 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:16:50 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1338500062 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:16:50 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:16:50 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:16:50 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:16:50 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45a86da]
2024-07-03 10:16:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:16:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@359642ba]
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:16:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:16:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:16:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:17:00 GMT+08:00 2024
2024-07-03 10:17:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:17:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:17:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:17:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:17:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:17:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b900be2] was not registered for synchronization because synchronization is not active
2024-07-03 10:17:32 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:17:32 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1010956140 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:17:32 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:17:32 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:17:32 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:17:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b900be2]
2024-07-03 10:17:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:17:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@19eea65]
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:17:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:17:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:17:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:17:48 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:17:48 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ff6c4f4] was not registered for synchronization because synchronization is not active
2024-07-03 10:17:48 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:17:48 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@88072920 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:17:48 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:17:48 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:17:48 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:17:48 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ff6c4f4]
2024-07-03 10:17:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:17:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@c3c541f]
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:17:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:17:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:17:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:18:00 GMT+08:00 2024
2024-07-03 10:18:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:18:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:18:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e8e7ec3] was not registered for synchronization because synchronization is not active
2024-07-03 10:18:14 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:18:14 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1949048933 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:18:14 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:18:14 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:18:14 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:18:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e8e7ec3]
2024-07-03 10:18:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:18:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@510726c0]
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:18:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:18:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:18:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:18:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:18:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:18:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:18:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:18:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:19:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:19:00 GMT+08:00 2024
2024-07-03 10:19:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:19:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:19:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:19:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:19:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:19:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a3611ad] was not registered for synchronization because synchronization is not active
2024-07-03 10:19:40 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:19:40 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@633406324 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:19:40 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:19:40 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:19:40 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:19:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a3611ad]
2024-07-03 10:19:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:19:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@123f1cf3]
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:19:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:19:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:19:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:19:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:19:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:20:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:20:00 GMT+08:00 2024
2024-07-03 10:20:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:20:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:20:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b6bfb2] was not registered for synchronization because synchronization is not active
2024-07-03 10:20:02 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:20:02 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1147813056 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:20:02 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:20:02 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:20:02 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:20:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b6bfb2]
2024-07-03 10:20:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:20:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@7553bad2]
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:20:07 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:20:07 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15605664] was not registered for synchronization because synchronization is not active
2024-07-03 10:20:07 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:20:07 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@324732059 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:20:07 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:20:07 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:20:07 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:20:07 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15605664]
2024-07-03 10:20:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:20:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@1bd980c1]
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:20:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:20:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:20:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:20:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:20:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:20:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:20:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:20:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:21:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:21:00 GMT+08:00 2024
2024-07-03 10:21:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:21:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:21:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:21:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:21:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:21:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d350e8e] was not registered for synchronization because synchronization is not active
2024-07-03 10:21:32 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:21:32 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@141531357 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:21:32 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:21:32 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:21:32 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:21:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d350e8e]
2024-07-03 10:21:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:21:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@2221364]
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:21:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:21:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:21:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:21:56 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:21:56 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dad930b] was not registered for synchronization because synchronization is not active
2024-07-03 10:21:56 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:21:56 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@45327193 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:21:56 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:21:56 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:21:56 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:21:56 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dad930b]
2024-07-03 10:21:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:21:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@17db8934]
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:21:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:21:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:21:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:22:00 GMT+08:00 2024
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:22:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:22:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@300d888a] was not registered for synchronization because synchronization is not active
2024-07-03 10:22:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:22:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@14549142 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:22:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:22:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:22:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:22:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@300d888a]
2024-07-03 10:22:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:22:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5cd24162]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:22:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:22:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cd79495] was not registered for synchronization because synchronization is not active
2024-07-03 10:22:16 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:22:16 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1430607821 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:22:16 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:22:16 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:22:16 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:22:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cd79495]
2024-07-03 10:22:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:22:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@671d8866]
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:22:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:22:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:22:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:22:28 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:22:28 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e7eef9c] was not registered for synchronization because synchronization is not active
2024-07-03 10:22:28 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:22:28 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@505104768 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:22:28 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:22:28 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:22:28 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:22:28 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e7eef9c]
2024-07-03 10:22:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:22:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@1fa05760]
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:22:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:22:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:22:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:22:48 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:22:48 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50e83e70] was not registered for synchronization because synchronization is not active
2024-07-03 10:22:48 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:22:48 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1692579752 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:22:48 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:22:48 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:22:48 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:22:48 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50e83e70]
2024-07-03 10:22:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:22:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@ff4f286]
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:22:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:22:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b5ecfe1] was not registered for synchronization because synchronization is not active
2024-07-03 10:22:51 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:22:51 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@79313267 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:22:51 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:22:51 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:22:51 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:22:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b5ecfe1]
2024-07-03 10:22:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:22:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5c92a0c6]
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:59 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:22:59 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:22:59 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1799058] was not registered for synchronization because synchronization is not active
2024-07-03 10:22:59 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:22:59 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1346311051 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:22:59 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:22:59 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:22:59 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:22:59 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1799058]
2024-07-03 10:22:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:22:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4d655064]
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:59 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:59 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:59 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:59 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:59 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:59 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:59 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:22:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:22:59 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:22:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:23:00 GMT+08:00 2024
2024-07-03 10:23:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:23:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:23:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:23:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:23:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:23:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33da2ec2] was not registered for synchronization because synchronization is not active
2024-07-03 10:23:19 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:23:19 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1780180912 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:23:19 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:23:19 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:23:19 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:23:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33da2ec2]
2024-07-03 10:23:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:23:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@7c2f173c]
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:23:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:23:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@352dc88e] was not registered for synchronization because synchronization is not active
2024-07-03 10:23:22 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:23:22 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1162484218 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:23:22 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:23:22 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:23:22 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:23:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@352dc88e]
2024-07-03 10:23:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:23:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@423c007f]
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:23:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:23:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:23:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:23:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:23:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:24:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:24:00 GMT+08:00 2024
2024-07-03 10:24:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:24:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:24:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33969335] was not registered for synchronization because synchronization is not active
2024-07-03 10:24:15 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:24:15 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@903199993 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:24:15 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:24:15 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:24:15 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:24:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33969335]
2024-07-03 10:24:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:24:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@40a806e]
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:24:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:24:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:24:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:24:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:24:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cf792c7] was not registered for synchronization because synchronization is not active
2024-07-03 10:24:25 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:24:25 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1886287688 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:24:25 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:24:25 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:24:25 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:24:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cf792c7]
2024-07-03 10:24:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:24:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@7d324059]
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:24:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:24:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58cd687e] was not registered for synchronization because synchronization is not active
2024-07-03 10:24:37 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:24:37 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1045965766 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:24:37 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:24:37 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:24:37 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:24:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58cd687e]
2024-07-03 10:24:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:24:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@51c90061]
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:24:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:24:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:24:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:24:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:24:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:25:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:25:00 GMT+08:00 2024
2024-07-03 10:25:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:25:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:25:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:25:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:25:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:25:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:25:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:25:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:25:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:25:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:26:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:26:00 GMT+08:00 2024
2024-07-03 10:26:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:26:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:26:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:26:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:26:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:26:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:26:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:26:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:26:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:26:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:27:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:27:00 GMT+08:00 2024
2024-07-03 10:27:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:27:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:27:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@960a43d] was not registered for synchronization because synchronization is not active
2024-07-03 10:27:02 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:27:02 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1548896651 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:27:02 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:27:02 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:27:02 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:27:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@960a43d]
2024-07-03 10:27:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:27:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@319e0646]
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:27:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:27:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:27:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:27:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:27:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:27:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:27:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:27:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:28:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:28:00 GMT+08:00 2024
2024-07-03 10:28:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:28:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:28:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:28:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:28:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:28:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:28:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:28:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:28:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:28:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:28:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:28:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20d3669b] was not registered for synchronization because synchronization is not active
2024-07-03 10:28:49 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:28:49 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1554403344 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:28:49 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:28:49 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:28:49 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:28:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20d3669b]
2024-07-03 10:28:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:28:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5f9b243a]
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:28:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:28:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:28:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:29:00 GMT+08:00 2024
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/saveArea", parameters={multipart}
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#saveArea(Integer, String, Integer, Integer, String, Integer, List)
2024-07-03 10:29:00 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][getTransaction][370]-> Creating new transaction with name [com.cultural.service.impl.SysAreaServiceImpl.saveArea]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
2024-07-03 10:29:00 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doBegin][271]-> Acquired Connection [HikariProxyConnection@1038754393 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] for JDBC transaction
2024-07-03 10:29:00 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doBegin][289]-> Switching JDBC Connection [HikariProxyConnection@1038754393 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] to manual commit
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][128]-> Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51252318]
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1038754393 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will be managed by Spring
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectByAreaId][debug][159]-> ==>  Preparing: select area_id,area_name,p_id,area_des,img_url, type,sort from sys_area where area_id=? 
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectByAreaId][debug][159]-> ==> Parameters: 1(Integer)
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectByAreaId][debug][159]-> <==      Total: 1
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][186]-> Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51252318]
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][sessionHolder][163]-> Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51252318] from current transaction
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.updateByAreaId][debug][159]-> ==>  Preparing: UPDATE sys_area SET area_name = ?, p_id = ?, area_des = ?, type = ?, sort = ? where area_id=? 
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.updateByAreaId][debug][159]-> ==> Parameters: 中国大陆(String), 0(Integer), (String), 1(Integer), 0(Integer), 1(Integer)
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.updateByAreaId][debug][159]-> <==    Updates: 1
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][186]-> Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51252318]
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][sessionHolder][163]-> Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51252318] from current transaction
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_area WHERE area_name = ? 
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectCount][debug][159]-> ==> Parameters: 中国大陆(String)
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectCount][debug][159]-> <==      Total: 1
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][186]-> Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51252318]
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCommit][284]-> Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51252318]
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCompletion][310]-> Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51252318]
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCompletion][315]-> Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51252318]
2024-07-03 10:29:00 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][processCommit][740]-> Initiating transaction commit
2024-07-03 10:29:00 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doCommit][334]-> Committing JDBC transaction on Connection [HikariProxyConnection@1038754393 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b]
2024-07-03 10:29:00 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doCleanupAfterCompletion][393]-> Releasing JDBC Connection [HikariProxyConnection@1038754393 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] after transaction
2024-07-03 10:29:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:29:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5889b663]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cc76478] was not registered for synchronization because synchronization is not active
2024-07-03 10:29:00 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@882821042 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:29:00 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:29:00 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cc76478]
2024-07-03 10:29:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:29:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4d836894]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:29:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:29:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:29:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:29:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:29:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:29:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:29:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:29:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:30:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:30:00 GMT+08:00 2024
2024-07-03 10:30:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:30:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:30:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:30:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:30:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:30:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6543b417] was not registered for synchronization because synchronization is not active
2024-07-03 10:30:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:30:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1214127897 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f9a734b] will not be managed by Spring
2024-07-03 10:30:30 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:30:30 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:30:30 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:30:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6543b417]
2024-07-03 10:30:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:30:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@535506e8]
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:30:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:30:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:30:34 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@705839e9: (connection has passed maxLifetime)
2024-07-03 10:30:34 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@33fa810a
2024-07-03 10:30:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:30:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:30:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:30:54 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5575426c: (connection has passed maxLifetime)
2024-07-03 10:30:54 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@9945bf0
2024-07-03 10:31:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:31:00 GMT+08:00 2024
2024-07-03 10:31:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:01 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5f9a734b: (connection has passed maxLifetime)
2024-07-03 10:31:01 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b4fe4ef
2024-07-03 10:31:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:31:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:31:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12b42792] was not registered for synchronization because synchronization is not active
2024-07-03 10:31:11 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:31:11 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1797419958 wrapping com.mysql.cj.jdbc.ConnectionImpl@7e06899d] will not be managed by Spring
2024-07-03 10:31:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:31:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:31:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:31:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12b42792]
2024-07-03 10:31:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:31:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5b19fd74]
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:31:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:31:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a6816b7] was not registered for synchronization because synchronization is not active
2024-07-03 10:31:13 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:31:13 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@262636801 wrapping com.mysql.cj.jdbc.ConnectionImpl@7e06899d] will not be managed by Spring
2024-07-03 10:31:13 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:31:13 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:31:13 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:31:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a6816b7]
2024-07-03 10:31:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:31:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@37218627]
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:31:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:31:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:31:17 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2ee6f583: (connection has passed maxLifetime)
2024-07-03 10:31:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@539e341f
2024-07-03 10:31:17 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7e06899d: (connection has passed maxLifetime)
2024-07-03 10:31:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@2740d53f
2024-07-03 10:31:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:31:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:31:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:31:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:31:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:31:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:32:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:32:00 GMT+08:00 2024
2024-07-03 10:32:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:32:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:32:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:32:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:32:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:32:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e8d25b] was not registered for synchronization because synchronization is not active
2024-07-03 10:32:37 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:32:37 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@729735120 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:32:37 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:32:37 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:32:37 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:32:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e8d25b]
2024-07-03 10:32:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:32:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@471e14ee]
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:32:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:32:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:32:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:33:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:33:00 GMT+08:00 2024
2024-07-03 10:33:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:33:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:33:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:33:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:33:42 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:33:42 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2999ffa1] was not registered for synchronization because synchronization is not active
2024-07-03 10:33:42 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:33:42 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@46067346 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:33:42 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:33:42 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:33:42 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:33:42 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2999ffa1]
2024-07-03 10:33:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:33:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4c726ada]
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:33:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:33:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:33:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:33:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:33:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:34:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:34:00 GMT+08:00 2024
2024-07-03 10:34:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:34:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:34:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:34:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:34:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:34:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:34:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:34:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:34:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:34:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:34:50 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:34:50 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2174bee4] was not registered for synchronization because synchronization is not active
2024-07-03 10:34:50 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:34:50 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@57578733 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:34:50 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:34:50 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:34:50 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:34:50 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2174bee4]
2024-07-03 10:34:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:34:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@58930e31]
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:34:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:34:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:34:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:35:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:35:00 GMT+08:00 2024
2024-07-03 10:35:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:35:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:35:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:35:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:35:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:35:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:35:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:35:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:35:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:35:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:36:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:36:00 GMT+08:00 2024
2024-07-03 10:36:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 10:36:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:36:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bc24d01] was not registered for synchronization because synchronization is not active
2024-07-03 10:36:01 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:36:01 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1223931786 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:36:01 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:36:01 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:36:01 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:36:01 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bc24d01]
2024-07-03 10:36:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:36:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@605ecd5]
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 10:36:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:36:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e2ee057] was not registered for synchronization because synchronization is not active
2024-07-03 10:36:03 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:36:03 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1709826140 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:36:03 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:36:03 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:36:03 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:36:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e2ee057]
2024-07-03 10:36:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:36:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@7f7b0d29]
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:36:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:36:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7a5017] was not registered for synchronization because synchronization is not active
2024-07-03 10:36:13 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:36:13 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@767098690 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:36:13 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:36:13 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:36:13 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:36:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7a5017]
2024-07-03 10:36:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:36:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@3ecb08ed]
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:36:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:36:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39ce6095] was not registered for synchronization because synchronization is not active
2024-07-03 10:36:16 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:36:16 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2117959042 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:36:16 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:36:16 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:36:16 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:36:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39ce6095]
2024-07-03 10:36:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:36:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@70547819]
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:36:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:36:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:36:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:36:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:36:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cacb775] was not registered for synchronization because synchronization is not active
2024-07-03 10:36:43 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:36:43 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1869888925 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:36:43 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:36:43 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:36:43 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:36:43 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cacb775]
2024-07-03 10:36:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:36:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@3b08dfaa]
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:36:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:36:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:36:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:36:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:36:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:37:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:37:00 GMT+08:00 2024
2024-07-03 10:37:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:37:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:37:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:37:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:37:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:37:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:37:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:37:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:37:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:37:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:37:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:37:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:38:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:38:00 GMT+08:00 2024
2024-07-03 10:38:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:38:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:38:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:38:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:38:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:38:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:38:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:38:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:38:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:38:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:38:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:38:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:39:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:39:00 GMT+08:00 2024
2024-07-03 10:39:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:39:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:39:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:39:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:39:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:39:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:39:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:39:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:39:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:39:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:39:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:39:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:40:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:40:00 GMT+08:00 2024
2024-07-03 10:40:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:40:05 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:40:05 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ee1fed8] was not registered for synchronization because synchronization is not active
2024-07-03 10:40:05 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:40:05 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@443816203 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:40:05 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:40:05 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:40:05 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:40:05 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ee1fed8]
2024-07-03 10:40:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:40:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@42b41cdd]
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:40:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:40:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:40:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:40:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:40:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:40:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:40:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:40:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:41:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:41:00 GMT+08:00 2024
2024-07-03 10:41:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:41:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:41:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@91ca241] was not registered for synchronization because synchronization is not active
2024-07-03 10:41:11 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:41:11 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@224892099 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:41:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:41:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:41:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:41:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@91ca241]
2024-07-03 10:41:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:41:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@21328c5]
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:41:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:41:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:41:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/saveArea", parameters={multipart}
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#saveArea(Integer, String, Integer, Integer, String, Integer, List)
2024-07-03 10:41:40 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][getTransaction][370]-> Creating new transaction with name [com.cultural.service.impl.SysAreaServiceImpl.saveArea]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
2024-07-03 10:41:40 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doBegin][271]-> Acquired Connection [HikariProxyConnection@1880893075 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] for JDBC transaction
2024-07-03 10:41:40 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doBegin][289]-> Switching JDBC Connection [HikariProxyConnection@1880893075 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] to manual commit
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][128]-> Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3defa769]
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1880893075 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will be managed by Spring
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.insert][debug][159]-> ==>  Preparing: INSERT INTO sys_area ( area_name, p_id, area_des, type, sort ) values ( ?, ?, ?, ?, ? ) 
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.insert][debug][159]-> ==> Parameters: 太原园区(String), 1(Integer), 这是太原(String), 2(Integer), 1(Integer)
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.insert][debug][159]-> <==    Updates: 1
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.insert!selectKey][debug][159]-> ==>  Preparing: SELECT LAST_INSERT_ID() 
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.insert!selectKey][debug][159]-> ==> Parameters: 
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.insert!selectKey][debug][159]-> <==      Total: 1
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][186]-> Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3defa769]
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][sessionHolder][163]-> Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3defa769] from current transaction
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_area WHERE area_name = ? 
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.selectCount][debug][159]-> ==> Parameters: 太原园区(String)
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.selectCount][debug][159]-> <==      Total: 1
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][186]-> Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3defa769]
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCommit][284]-> Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3defa769]
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCompletion][310]-> Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3defa769]
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCompletion][315]-> Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3defa769]
2024-07-03 10:41:40 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][processCommit][740]-> Initiating transaction commit
2024-07-03 10:41:40 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doCommit][334]-> Committing JDBC transaction on Connection [HikariProxyConnection@1880893075 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a]
2024-07-03 10:41:40 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doCleanupAfterCompletion][393]-> Releasing JDBC Connection [HikariProxyConnection@1880893075 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] after transaction
2024-07-03 10:41:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:41:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@b89d605]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70867940] was not registered for synchronization because synchronization is not active
2024-07-03 10:41:40 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1735538474 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:41:40 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 5
2024-07-03 10:41:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70867940]
2024-07-03 10:41:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:41:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4a85d499]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:41:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:41:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:41:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:41:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:41:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:42:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:42:00 GMT+08:00 2024
2024-07-03 10:42:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/saveArea", parameters={multipart}
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#saveArea(Integer, String, Integer, Integer, String, Integer, List)
2024-07-03 10:42:03 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][getTransaction][370]-> Creating new transaction with name [com.cultural.service.impl.SysAreaServiceImpl.saveArea]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception
2024-07-03 10:42:03 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doBegin][271]-> Acquired Connection [HikariProxyConnection@777155374 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] for JDBC transaction
2024-07-03 10:42:03 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doBegin][289]-> Switching JDBC Connection [HikariProxyConnection@777155374 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] to manual commit
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][128]-> Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68accaa5]
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@777155374 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will be managed by Spring
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectByAreaId][debug][159]-> ==>  Preparing: select area_id,area_name,p_id,area_des,img_url, type,sort from sys_area where area_id=? 
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectByAreaId][debug][159]-> ==> Parameters: 5(Integer)
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectByAreaId][debug][159]-> <==      Total: 1
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][186]-> Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68accaa5]
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][sessionHolder][163]-> Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68accaa5] from current transaction
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.updateByAreaId][debug][159]-> ==>  Preparing: UPDATE sys_area SET area_name = ?, p_id = ?, area_des = ?, type = ?, sort = ? where area_id=? 
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.updateByAreaId][debug][159]-> ==> Parameters: 太原园区(String), 1(Integer), 这是太原(String), 1(Integer), 1(Integer), 5(Integer)
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.updateByAreaId][debug][159]-> <==    Updates: 1
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][186]-> Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68accaa5]
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][sessionHolder][163]-> Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68accaa5] from current transaction
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_area WHERE area_name = ? 
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectCount][debug][159]-> ==> Parameters: 太原园区(String)
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectCount][debug][159]-> <==      Total: 1
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][186]-> Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68accaa5]
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCommit][284]-> Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68accaa5]
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCompletion][310]-> Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68accaa5]
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][beforeCompletion][315]-> Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68accaa5]
2024-07-03 10:42:03 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][processCommit][740]-> Initiating transaction commit
2024-07-03 10:42:03 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doCommit][334]-> Committing JDBC transaction on Connection [HikariProxyConnection@777155374 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a]
2024-07-03 10:42:03 [DEBUG][org.springframework.jdbc.support.JdbcTransactionManager][doCleanupAfterCompletion][393]-> Releasing JDBC Connection [HikariProxyConnection@777155374 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] after transaction
2024-07-03 10:42:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:42:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@682ed598]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34475182] was not registered for synchronization because synchronization is not active
2024-07-03 10:42:03 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@359543650 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:42:03 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 5
2024-07-03 10:42:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34475182]
2024-07-03 10:42:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:42:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@cd767d5]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/delArea", parameters={multipart}
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#delArea(Integer)
2024-07-03 10:42:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:42:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e5d0ed0] was not registered for synchronization because synchronization is not active
2024-07-03 10:42:15 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:42:15 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@495400867 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:42:15 [DEBUG][com.cultural.mappers.SysAreaMapper.deleteByAreaId][debug][159]-> ==>  Preparing: delete from sys_area where area_id=? 
2024-07-03 10:42:15 [DEBUG][com.cultural.mappers.SysAreaMapper.deleteByAreaId][debug][159]-> ==> Parameters: 5(Integer)
2024-07-03 10:42:15 [DEBUG][com.cultural.mappers.SysAreaMapper.deleteByAreaId][debug][159]-> <==    Updates: 1
2024-07-03 10:42:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e5d0ed0]
2024-07-03 10:42:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:42:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5605162f]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:42:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:42:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a94fb65] was not registered for synchronization because synchronization is not active
2024-07-03 10:42:15 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:42:15 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@963047781 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:42:15 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:42:15 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:42:15 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:42:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a94fb65]
2024-07-03 10:42:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:42:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@ceca1c]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:42:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:42:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:42:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:42:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:42:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f4aaa13] was not registered for synchronization because synchronization is not active
2024-07-03 10:42:29 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:42:29 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1731834205 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:42:29 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area WHERE area_name like concat('%', ?, '%') order by sort asc 
2024-07-03 10:42:29 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 深圳(String)
2024-07-03 10:42:29 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:42:29 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f4aaa13]
2024-07-03 10:42:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:42:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@3fef427]
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:42:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:42:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@462b9102] was not registered for synchronization because synchronization is not active
2024-07-03 10:42:32 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:42:32 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1426003831 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:42:32 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area WHERE area_name like concat('%', ?, '%') order by sort asc 
2024-07-03 10:42:32 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 深(String)
2024-07-03 10:42:32 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:42:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@462b9102]
2024-07-03 10:42:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:42:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@6f99ef63]
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:42:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:42:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:42:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:42:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:42:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:43:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:43:00 GMT+08:00 2024
2024-07-03 10:43:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:43:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:43:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:43:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:43:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:43:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:43:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:43:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:43:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:43:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:43:57 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:43:57 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62b5a0cc] was not registered for synchronization because synchronization is not active
2024-07-03 10:43:57 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:43:57 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@950760601 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:43:57 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:43:57 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:43:57 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:43:57 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62b5a0cc]
2024-07-03 10:43:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:43:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@695f1330]
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:43:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:43:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:43:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:44:00 GMT+08:00 2024
2024-07-03 10:44:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:44:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:44:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d1a6fe] was not registered for synchronization because synchronization is not active
2024-07-03 10:44:11 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:44:11 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@651327622 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:44:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area WHERE area_name like concat('%', ?, '%') order by sort asc 
2024-07-03 10:44:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 深(String)
2024-07-03 10:44:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:44:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d1a6fe]
2024-07-03 10:44:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:44:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@62924468]
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:44:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:44:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39099416] was not registered for synchronization because synchronization is not active
2024-07-03 10:44:15 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:44:15 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2090113850 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:44:15 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area WHERE area_name like concat('%', ?, '%') order by sort asc 
2024-07-03 10:44:15 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 1(String)
2024-07-03 10:44:15 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 0
2024-07-03 10:44:15 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39099416]
2024-07-03 10:44:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:44:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@54a30621]
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:15 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:15 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:44:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:44:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c80e3eb] was not registered for synchronization because synchronization is not active
2024-07-03 10:44:18 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:44:18 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1794157310 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:44:18 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area WHERE area_name like concat('%', ?, '%') order by sort asc 
2024-07-03 10:44:18 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 中(String)
2024-07-03 10:44:18 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:44:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c80e3eb]
2024-07-03 10:44:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:44:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@302f611d]
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:44:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:44:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:44:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:44:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:44:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58f573a9] was not registered for synchronization because synchronization is not active
2024-07-03 10:44:32 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:44:32 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@548488807 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:44:32 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:44:32 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:44:32 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:44:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58f573a9]
2024-07-03 10:44:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:44:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@337580e3]
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:44:38 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:44:38 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b031c2d] was not registered for synchronization because synchronization is not active
2024-07-03 10:44:38 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:44:38 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1049988626 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:44:38 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column WHERE column_name like concat('%', ?, '%') order by sort asc 
2024-07-03 10:44:38 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 局(String)
2024-07-03 10:44:38 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:44:38 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b031c2d]
2024-07-03 10:44:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:44:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@593f2115]
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:44:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:44:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:44:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:44:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:44:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:45:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:45:00 GMT+08:00 2024
2024-07-03 10:45:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 10:45:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@768a9eb2] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:16 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:16 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1146547289 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:16 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:45:16 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:16 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:45:16 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@768a9eb2]
2024-07-03 10:45:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@35ac649]
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/loadRoles", parameters={multipart}
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysRoleController#loadRoles(SysRoleQuery)
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@168b2d8f] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:17 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1084041205 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@168b2d8f]
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@58ba3198]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5704b4d3] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2074708687 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRoleMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_role 
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRoleMapper.selectCount][debug][159]-> ==> Parameters: 
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRoleMapper.selectCount][debug][159]-> <==      Total: 1
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5704b4d3]
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41a792da] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:17 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@129365950 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> ==>  Preparing: SELECT role_id,role_name,role_desc,create_time,last_update_time FROM sys_role order by create_time desc limit ?,? 
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41a792da]
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@240ce607]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/getRoleByRoleId", parameters={multipart}
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysRoleController#getRoleByRoleId(Integer)
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e749260] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:17 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1836958835 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRoleMapper.selectByRoleId][debug][159]-> ==>  Preparing: select role_id,role_name,role_desc,create_time,last_update_time from sys_role where role_id=? 
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRoleMapper.selectByRoleId][debug][159]-> ==> Parameters: 17(Integer)
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRoleMapper.selectByRoleId][debug][159]-> <==      Total: 1
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e749260]
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786c8c70] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:17 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1453869689 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> ==>  Preparing: select menu_id from sys_role_2_menu where role_id in( ? ) and check_type = 1 
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> ==> Parameters: 17(String)
2024-07-03 10:45:17 [DEBUG][com.cultural.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> <==      Total: 12
2024-07-03 10:45:17 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786c8c70]
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@63a1b8c3]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:45:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:45:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:45:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/loadAllRoles", parameters={multipart}
2024-07-03 10:45:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/loadAccountList", parameters={multipart}
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysRoleController#loadAllRoles()
2024-07-03 10:45:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAccountController#loadDataList(SysAccountQuery)
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60857b06] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:19 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@830491097 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:19 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> ==>  Preparing: SELECT role_id,role_name,role_desc,create_time,last_update_time FROM sys_role order by create_time desc 
2024-07-03 10:45:19 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:19 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60857b06]
2024-07-03 10:45:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@1e522ce7]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38be1373] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1130049914 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][com.cultural.mappers.SysAccountMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_account 
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][com.cultural.mappers.SysAccountMapper.selectCount][debug][159]-> ==> Parameters: 
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][com.cultural.mappers.SysAccountMapper.selectCount][debug][159]-> <==      Total: 1
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38be1373]
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2060e246] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:19 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@460192738 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:19 [DEBUG][com.cultural.mappers.SysAccountMapper.selectList][debug][159]-> ==>  Preparing: SELECT user_id,phone,user_name,password,position, status,roles,area,create_time,email ,(SELECT GROUP_CONCAT(role_name SEPARATOR ',') FROM sys_role WHERE FIND_IN_SET(role_id,roles) ) roleNames FROM sys_account where roles is not null order by create_time desc limit ?,? 
2024-07-03 10:45:19 [DEBUG][com.cultural.mappers.SysAccountMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2024-07-03 10:45:19 [DEBUG][com.cultural.mappers.SysAccountMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:45:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2060e246]
2024-07-03 10:45:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@2ecf3dfc]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:45:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d211a9] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:21 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:21 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1707342094 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:21 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:45:21 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:21 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:45:21 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d211a9]
2024-07-03 10:45:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@232acf6b]
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28dcf56a] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:22 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1359408444 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:22 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:45:22 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:22 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28dcf56a]
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5aed1dbd]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19c41b8f] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:22 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@199035397 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:22 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:45:22 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:22 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19c41b8f]
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@52393d26]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6329e52c] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:22 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1778314037 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:22 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:45:22 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:22 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:45:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6329e52c]
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4ae995fd]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:45:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@376548d0] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:24 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:24 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1364937556 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:24 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:45:24 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:24 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:45:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@376548d0]
2024-07-03 10:45:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@11809ff6]
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:45:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66561d97] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@621261834 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:26 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:45:26 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:26 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:45:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66561d97]
2024-07-03 10:45:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@13ab1250]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:45:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@449d9fbf] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2023573490 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:26 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:45:26 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:26 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:45:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@449d9fbf]
2024-07-03 10:45:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@89172b1]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:45:41 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:41 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f7a5e0] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:41 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:41 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1269792527 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:41 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:45:41 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:41 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:45:41 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f7a5e0]
2024-07-03 10:45:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@484936af]
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:45:42 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:42 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@820a508] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:42 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:42 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1369067343 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:42 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:45:42 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:45:42 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:45:42 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@820a508]
2024-07-03 10:45:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@7a023fff]
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:45:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:45:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:45:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:45:53 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:53 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@420db082] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:53 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:53 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1311622997 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:53 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column WHERE column_name like concat('%', ?, '%') order by sort asc 
2024-07-03 10:45:53 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 2(String)
2024-07-03 10:45:53 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:45:53 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@420db082]
2024-07-03 10:45:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@57f1e42d]
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:45:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:45:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@623f6106] was not registered for synchronization because synchronization is not active
2024-07-03 10:45:55 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:45:55 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1351285506 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:45:55 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column WHERE column_name like concat('%', ?, '%') order by sort asc 
2024-07-03 10:45:55 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 3(String)
2024-07-03 10:45:55 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:45:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@623f6106]
2024-07-03 10:45:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:45:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@562fa74d]
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:45:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:45:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:45:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:46:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:46:00 GMT+08:00 2024
2024-07-03 10:46:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:46:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:46:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:46:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:46:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:46:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:46:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:46:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:46:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:46:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:46:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:47:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:47:00 GMT+08:00 2024
2024-07-03 10:47:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:47:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:47:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a798a] was not registered for synchronization because synchronization is not active
2024-07-03 10:47:18 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:47:18 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@867494819 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:47:18 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:47:18 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:47:18 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:47:18 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a798a]
2024-07-03 10:47:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:47:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@6d6f2fc7]
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:47:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:47:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:47:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:47:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:47:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f53c4dc] was not registered for synchronization because synchronization is not active
2024-07-03 10:47:33 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:47:33 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@739190831 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:47:33 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:47:33 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:47:33 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:47:33 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f53c4dc]
2024-07-03 10:47:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:47:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@1e2d1c8c]
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:47:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:47:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:47:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:47:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:47:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:48:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:48:00 GMT+08:00 2024
2024-07-03 10:48:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:48:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:48:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f5da779] was not registered for synchronization because synchronization is not active
2024-07-03 10:48:11 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:48:11 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1014624813 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:48:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:48:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:48:11 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:48:11 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f5da779]
2024-07-03 10:48:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:48:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@65ab9545]
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:48:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:48:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@567ec6b] was not registered for synchronization because synchronization is not active
2024-07-03 10:48:13 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:48:13 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@858452404 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:48:13 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:48:13 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:48:13 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:48:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@567ec6b]
2024-07-03 10:48:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:48:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4907b8ce]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:48:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:48:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@154ae5f6] was not registered for synchronization because synchronization is not active
2024-07-03 10:48:13 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:48:13 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@893240972 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:48:13 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:48:13 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:48:13 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:48:13 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@154ae5f6]
2024-07-03 10:48:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:48:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@797b86b2]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:48:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:48:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:48:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:48:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:48:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27abe6e5] was not registered for synchronization because synchronization is not active
2024-07-03 10:48:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:48:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1268322182 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:48:31 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:48:31 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:48:31 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:48:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27abe6e5]
2024-07-03 10:48:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:48:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@415471e2]
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:48:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:48:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36c4d4f8] was not registered for synchronization because synchronization is not active
2024-07-03 10:48:37 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:48:37 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@207646694 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:48:37 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:48:37 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:48:37 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:48:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36c4d4f8]
2024-07-03 10:48:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:48:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@46a56c42]
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 10:48:38 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:48:38 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69030f8c] was not registered for synchronization because synchronization is not active
2024-07-03 10:48:38 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:48:38 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@427352118 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:48:38 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:48:38 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:48:38 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:48:38 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69030f8c]
2024-07-03 10:48:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:48:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@3b3d363b]
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:48:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:48:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dd89f30] was not registered for synchronization because synchronization is not active
2024-07-03 10:48:40 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:48:40 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@574116402 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:48:40 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:48:40 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:48:40 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:48:40 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5dd89f30]
2024-07-03 10:48:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:48:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@9563f63]
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:48:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:48:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:48:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:48:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:48:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:49:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:49:00 GMT+08:00 2024
2024-07-03 10:49:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:49:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:49:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:49:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:49:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:49:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:49:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:49:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:49:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:49:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:49:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:50:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:50:00 GMT+08:00 2024
2024-07-03 10:50:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:50:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:50:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:50:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:50:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:50:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:50:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:50:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:50:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:50:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:50:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:51:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:51:00 GMT+08:00 2024
2024-07-03 10:51:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:51:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:51:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:51:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:51:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:51:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:51:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:51:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:51:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:51:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:51:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:52:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:52:00 GMT+08:00 2024
2024-07-03 10:52:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:52:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d021cac] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:08 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:08 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1470570409 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:08 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:52:08 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:08 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:52:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d021cac]
2024-07-03 10:52:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@3419c60f]
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:52:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f2de915] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@277891515 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:09 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:52:09 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:09 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:52:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f2de915]
2024-07-03 10:52:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@62a3e82f]
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:52:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:52:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:52:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:52:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35117a86] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@246614521 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:30 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:52:30 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:30 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:52:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35117a86]
2024-07-03 10:52:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@6aead235]
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:52:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64ebea93] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@446588724 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:31 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:52:31 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:31 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:52:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64ebea93]
2024-07-03 10:52:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@7b5f168f]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:52:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4366d759] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:31 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@609747225 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:31 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:52:31 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:31 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:52:31 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4366d759]
2024-07-03 10:52:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@6ce6b11f]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:52:45 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:45 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a62d5e3] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:45 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:45 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@71307935 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:45 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:52:45 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:45 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:52:45 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a62d5e3]
2024-07-03 10:52:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@42204fb1]
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 10:52:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dcfbfe2] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:46 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:46 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1675771178 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:46 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:52:46 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:46 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:52:46 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2dcfbfe2]
2024-07-03 10:52:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@102baff8]
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:52:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b13914e] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:47 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:47 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2124838756 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:47 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:52:47 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:47 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:52:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b13914e]
2024-07-03 10:52:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@67bcb669]
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:52:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:52:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:52:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:52:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36bab0c5] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:49 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:49 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1372966120 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:49 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:52:49 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:49 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:52:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36bab0c5]
2024-07-03 10:52:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5a81e759]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:52:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6caee83a] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:49 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:49 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1947588965 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:49 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:52:49 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:49 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:52:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6caee83a]
2024-07-03 10:52:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@72b1d2cb]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:52:50 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:50 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a9d1cb1] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:50 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:50 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1982363873 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:50 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:52:50 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:50 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:52:50 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a9d1cb1]
2024-07-03 10:52:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@b61cfa5]
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:52:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c9c265c] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:51 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:51 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1802387597 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:51 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:52:51 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:51 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:52:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c9c265c]
2024-07-03 10:52:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@34fa0a6d]
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:52:52 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:52 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@509c7210] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:52 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:52 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1663472662 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:52 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:52:52 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:52 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:52:52 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@509c7210]
2024-07-03 10:52:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@7c4cd279]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:52:52 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:52 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1acf896d] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:52 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:52 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1644716223 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:52 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:52:52 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:52 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:52:52 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1acf896d]
2024-07-03 10:52:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@2172e7c3]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:52:53 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:52:53 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@169a2528] was not registered for synchronization because synchronization is not active
2024-07-03 10:52:53 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:52:53 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@191185440 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:52:53 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:52:53 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:52:53 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:52:53 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@169a2528]
2024-07-03 10:52:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:52:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4c374f08]
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:52:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:52:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:52:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:53:00 GMT+08:00 2024
2024-07-03 10:53:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 10:53:05 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:53:05 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39911d5f] was not registered for synchronization because synchronization is not active
2024-07-03 10:53:05 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:53:05 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@903449497 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:53:05 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 10:53:05 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:53:05 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 10:53:05 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39911d5f]
2024-07-03 10:53:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:53:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@51c6655e]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:53:05 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:53:05 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37a5014] was not registered for synchronization because synchronization is not active
2024-07-03 10:53:05 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:53:05 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1375844418 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:53:05 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:53:05 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:53:05 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:53:05 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37a5014]
2024-07-03 10:53:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:53:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@60316fda]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:53:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:53:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:53:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:53:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:53:18 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:53:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:53:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:53:48 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:54:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:54:00 GMT+08:00 2024
2024-07-03 10:54:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:54:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:54:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:54:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:54:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:54:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:54:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:54:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:54:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:54:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:54:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:55:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:55:00 GMT+08:00 2024
2024-07-03 10:55:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:55:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:55:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:55:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 10:55:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fd1663f] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:25 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:25 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2063751897 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:55:25 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:55:25 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:55:25 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:55:25 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fd1663f]
2024-07-03 10:55:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:55:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@6486dee7]
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/loadRoles", parameters={multipart}
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysRoleController#loadRoles(SysRoleQuery)
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d70721] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf1c697] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@107537120 wrapping com.mysql.cj.jdbc.ConnectionImpl@9945bf0] will not be managed by Spring
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1698434161 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRoleMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_role 
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRoleMapper.selectCount][debug][159]-> ==> Parameters: 
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d70721]
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRoleMapper.selectCount][debug][159]-> <==      Total: 1
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf1c697]
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@7a63fbc7]
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298810c4] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1811880389 wrapping com.mysql.cj.jdbc.ConnectionImpl@9945bf0] will not be managed by Spring
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> ==>  Preparing: SELECT role_id,role_name,role_desc,create_time,last_update_time FROM sys_role order by create_time desc limit ?,? 
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@298810c4]
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@1ccac35a]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/getRoleByRoleId", parameters={multipart}
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysRoleController#getRoleByRoleId(Integer)
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cbb4ac8] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@908494692 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRoleMapper.selectByRoleId][debug][159]-> ==>  Preparing: select role_id,role_name,role_desc,create_time,last_update_time from sys_role where role_id=? 
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRoleMapper.selectByRoleId][debug][159]-> ==> Parameters: 17(Integer)
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRoleMapper.selectByRoleId][debug][159]-> <==      Total: 1
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cbb4ac8]
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f35a521] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:26 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@704533253 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> ==>  Preparing: select menu_id from sys_role_2_menu where role_id in( ? ) and check_type = 1 
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> ==> Parameters: 17(String)
2024-07-03 10:55:26 [DEBUG][com.cultural.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> <==      Total: 12
2024-07-03 10:55:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f35a521]
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@8ed03b3]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/loadAllRoles", parameters={multipart}
2024-07-03 10:55:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/loadAccountList", parameters={multipart}
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysRoleController#loadAllRoles()
2024-07-03 10:55:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAccountController#loadDataList(SysAccountQuery)
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39cbeab8] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@800d9b3] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@916149775 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1581578095 wrapping com.mysql.cj.jdbc.ConnectionImpl@9945bf0] will not be managed by Spring
2024-07-03 10:55:27 [DEBUG][com.cultural.mappers.SysAccountMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_account 
2024-07-03 10:55:27 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> ==>  Preparing: SELECT role_id,role_name,role_desc,create_time,last_update_time FROM sys_role order by create_time desc 
2024-07-03 10:55:27 [DEBUG][com.cultural.mappers.SysAccountMapper.selectCount][debug][159]-> ==> Parameters: 
2024-07-03 10:55:27 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:55:27 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:55:27 [DEBUG][com.cultural.mappers.SysAccountMapper.selectCount][debug][159]-> <==      Total: 1
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39cbeab8]
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@800d9b3]
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f58d1d] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@3f2aca6]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@199770158 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:55:27 [DEBUG][com.cultural.mappers.SysAccountMapper.selectList][debug][159]-> ==>  Preparing: SELECT user_id,phone,user_name,password,position, status,roles,area,create_time,email ,(SELECT GROUP_CONCAT(role_name SEPARATOR ',') FROM sys_role WHERE FIND_IN_SET(role_id,roles) ) roleNames FROM sys_account where roles is not null order by create_time desc limit ?,? 
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][com.cultural.mappers.SysAccountMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][com.cultural.mappers.SysAccountMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f58d1d]
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:55:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@58a626d6]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/loadRoles", parameters={multipart}
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysRoleController#loadRoles(SysRoleQuery)
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@82154bc] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@551e3e12] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:32 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:32 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1117224140 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@171741858 wrapping com.mysql.cj.jdbc.ConnectionImpl@9945bf0] will not be managed by Spring
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRoleMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_role 
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRoleMapper.selectCount][debug][159]-> ==> Parameters: 
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRoleMapper.selectCount][debug][159]-> <==      Total: 1
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@82154bc]
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@551e3e12]
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9d86664] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@74d8770d]
2024-07-03 10:55:32 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@370557784 wrapping com.mysql.cj.jdbc.ConnectionImpl@9945bf0] will not be managed by Spring
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> ==>  Preparing: SELECT role_id,role_name,role_desc,create_time,last_update_time FROM sys_role order by create_time desc limit ?,? 
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRoleMapper.selectList][debug][159]-> <==      Total: 1
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9d86664]
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@2aeda494]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/getRoleByRoleId", parameters={multipart}
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysRoleController#getRoleByRoleId(Integer)
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77956710] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:32 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1483166754 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRoleMapper.selectByRoleId][debug][159]-> ==>  Preparing: select role_id,role_name,role_desc,create_time,last_update_time from sys_role where role_id=? 
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRoleMapper.selectByRoleId][debug][159]-> ==> Parameters: 17(Integer)
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRoleMapper.selectByRoleId][debug][159]-> <==      Total: 1
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77956710]
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33caedb7] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:32 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1874571577 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> ==>  Preparing: select menu_id from sys_role_2_menu where role_id in( ? ) and check_type = 1 
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> ==> Parameters: 17(String)
2024-07-03 10:55:32 [DEBUG][com.cultural.mappers.SysRole2MenuMapper.selectMenuIdsByRoleIds][debug][159]-> <==      Total: 12
2024-07-03 10:55:32 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33caedb7]
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@d11a52a]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 10:55:34 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:34 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e347d5e] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:34 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:34 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@904638283 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:55:34 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 10:55:34 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:55:34 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 10:55:34 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e347d5e]
2024-07-03 10:55:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:55:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5b7f3e0a]
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:35 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:35 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 10:55:35 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 10:55:35 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bd3284e] was not registered for synchronization because synchronization is not active
2024-07-03 10:55:35 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 10:55:35 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@772223423 wrapping com.mysql.cj.jdbc.ConnectionImpl@33fa810a] will not be managed by Spring
2024-07-03 10:55:35 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 10:55:35 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 10:55:35 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 10:55:35 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bd3284e]
2024-07-03 10:55:35 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 10:55:35 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4f23f534]
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:35 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:55:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:55:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:55:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:55:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:55:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:56:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:56:00 GMT+08:00 2024
2024-07-03 10:56:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:56:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:56:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:56:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:56:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:56:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:56:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:56:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:56:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:56:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:56:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:57:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:57:00 GMT+08:00 2024
2024-07-03 10:57:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:57:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:57:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:57:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:57:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:57:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:57:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:57:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:57:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:57:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:57:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:58:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:58:00 GMT+08:00 2024
2024-07-03 10:58:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:58:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:58:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:58:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:58:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:58:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:58:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:58:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:58:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:58:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:59:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 10:59:00 GMT+08:00 2024
2024-07-03 10:59:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:59:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:59:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 10:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 10:59:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 10:59:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:59:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:59:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 10:59:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:59:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 10:59:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:00:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:00:00 GMT+08:00 2024
2024-07-03 11:00:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:00:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:00:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:00:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:00:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:00:05 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-07-03 11:00:05 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][doClose][1051]-> Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60957c0f, started on Wed Jul 03 10:01:09 GMT+08:00 2024
2024-07-03 11:00:05 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-07-03 11:00:05 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483647
2024-07-03 11:00:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:00:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:00:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:00:05 [DEBUG][io.lettuce.core.RedisChannelHandler][closeAsync][141]-> closeAsync()
2024-07-03 11:00:05 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][doUnsubscribe][414]-> Stopped listening.
2024-07-03 11:00:05 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][stop][379]-> Stopped RedisMessageListenerContainer.
2024-07-03 11:00:05 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'springSessionRedisMessageListenerContainer' completed its stop procedure
2024-07-03 11:00:05 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerGracefulShutdown' completed its stop procedure
2024-07-03 11:00:05 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483646
2024-07-03 11:00:05 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerStartStop' completed its stop procedure
2024-07-03 11:00:05 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase -2147483647
2024-07-03 11:00:05 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'springBootLoggingLifecycle' completed its stop procedure
2024-07-03 11:00:05 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][stop][379]-> Stopped RedisMessageListenerContainer.
2024-07-03 11:00:05 [DEBUG][io.lettuce.core.RedisChannelHandler][closeAsync][141]-> closeAsync()
2024-07-03 11:00:05 [DEBUG][io.lettuce.core.AbstractRedisClient][shutdownAsync][539]-> Initiate shutdown (100, 100, MILLISECONDS)
2024-07-03 11:00:05 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][doRelease][281]-> Release executor io.netty.channel.nio.NioEventLoopGroup@5c997de8
2024-07-03 11:00:05 [DEBUG][io.netty.buffer.PoolThreadCache][free][221]-> Freed 10 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2024-07-03 11:00:05 [DEBUG][io.netty.buffer.PoolThreadCache][free][221]-> Freed 17 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2024-07-03 11:00:05 [DEBUG][io.lettuce.core.resource.DefaultClientResources][shutdown][735]-> Initiate shutdown (0, 2, SECONDS)
2024-07-03 11:00:05 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][shutdown][317]-> Initiate shutdown (0, 2, SECONDS)
2024-07-03 11:00:05 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][destroy][452]-> Unregistering JMX-exposed beans on shutdown
2024-07-03 11:00:05 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][unregisterBeans][186]-> Unregistering JMX-exposed beans
2024-07-03 11:00:05 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][shutdown][220]-> Shutting down ExecutorService 'applicationTaskExecutor'
2024-07-03 11:00:05 [INFO][com.zaxxer.hikari.HikariDataSource][close][350]-> HikariCPDatasource - Shutdown initiated...
2024-07-03 11:00:05 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before shutdown stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:00:05 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@33fa810a: (connection evicted)
2024-07-03 11:00:05 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@9945bf0: (connection evicted)
2024-07-03 11:00:05 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6b4fe4ef: (connection evicted)
2024-07-03 11:00:05 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@539e341f: (connection evicted)
2024-07-03 11:00:05 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2740d53f: (connection evicted)
2024-07-03 11:00:05 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2024-07-03 11:00:05 [INFO][com.zaxxer.hikari.HikariDataSource][close][352]-> HikariCPDatasource - Shutdown completed.
2024-07-03 11:19:30 [INFO][com.cultural.CulturalAdminApplication][logStarting][55]-> Starting CulturalAdminApplication using Java 1.8.0_202 on GeneMiniCom with PID 9332 (D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes started by 17673 in D:\Code\myworkspace-java\foxconn-cultural)
2024-07-03 11:19:30 [DEBUG][com.cultural.CulturalAdminApplication][logStarting][56]-> Running with Spring Boot v2.7.13, Spring v5.3.28
2024-07-03 11:19:30 [INFO][com.cultural.CulturalAdminApplication][logStartupProfileInfo][631]-> No active profile set, falling back to 1 default profile: "default"
2024-07-03 11:19:30 [DEBUG][org.springframework.boot.SpringApplication][load][664]-> Loading source class com.cultural.CulturalAdminApplication
2024-07-03 11:19:30 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][prepareRefresh][629]-> Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60
2024-07-03 11:19:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2024-07-03 11:19:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\aspect\OperationAspect.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\AGlobalExceptionHandlerController.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\FileController.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\LoginController.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysAccountController.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysAreaController.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysColumnController.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysMenuController.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysRoleController.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysTagController.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\entity\config\AdminConfig.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\entity\config\AppConfig.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysAccountServiceImpl.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysAreaServiceImpl.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysColumnServiceImpl.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysMenuServiceImpl.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysRole2MenuServiceImpl.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysRoleServiceImpl.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysTagServiceImpl.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\utils\FileUtils.class]
2024-07-03 11:19:30 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\utils\ImageUtils.class]
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\BaseMapper.class]
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysAccountMapper.class]
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysAreaMapper.class]
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysColumnMapper.class]
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysMenuMapper.class]
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysRole2MenuMapper.class]
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysRoleMapper.class]
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysTagMapper.class]
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'baseMapper' and 'com.cultural.mappers.BaseMapper' mapperInterface
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'baseMapper'.
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysAccountMapper' and 'com.cultural.mappers.SysAccountMapper' mapperInterface
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysAccountMapper'.
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysAreaMapper' and 'com.cultural.mappers.SysAreaMapper' mapperInterface
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysAreaMapper'.
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysColumnMapper' and 'com.cultural.mappers.SysColumnMapper' mapperInterface
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysColumnMapper'.
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysMenuMapper' and 'com.cultural.mappers.SysMenuMapper' mapperInterface
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysMenuMapper'.
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRole2MenuMapper' and 'com.cultural.mappers.SysRole2MenuMapper' mapperInterface
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRole2MenuMapper'.
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRoleMapper' and 'com.cultural.mappers.SysRoleMapper' mapperInterface
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRoleMapper'.
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysTagMapper' and 'com.cultural.mappers.SysTagMapper' mapperInterface
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysTagMapper'.
2024-07-03 11:19:31 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][multipleStoresDetected][262]-> Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03 11:19:31 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.autoconfigure.AutoConfigurationPackages][get][196]-> @EnableAutoConfiguration was declared on a class in the package 'com.cultural'. Automatic @Repository and @Entity scanning is enabled.
2024-07-03 11:19:31 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cultural.
2024-07-03 11:19:31 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.ProxyAsyncConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory][getAdvice][258]-> Found AspectJ method: public void com.cultural.aspect.OperationAspect.interceptorDo(org.aspectj.lang.JoinPoint) throws com.cultural.exception.BusinessException
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionAttributeSource'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionInterceptor'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2024-07-03 11:19:31 [DEBUG][org.springframework.ui.context.support.UiApplicationContextUtils][initThemeSource][85]-> Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@2ddb3ae8]
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageCustomizer'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServletRegistration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServlet'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartConfigElement'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getArchiveFileDocumentRoot][81]-> Code archive: D:\Code\other\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getExplodedWarFileDocumentRoot][125]-> Code archive: D:\Code\other\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getValidDirectory][69]-> Document root: D:\Code\myworkspace-java\foxconn-cultural\public
2024-07-03 11:19:31 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][initialize][108]-> Tomcat initialized with port(s): 9090 (http)
2024-07-03 11:19:31 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Initializing ProtocolHandler ["http-nio-9090"]
2024-07-03 11:19:31 [INFO][org.apache.catalina.core.StandardService][log][173]-> Starting service [Tomcat]
2024-07-03 11:19:31 [INFO][org.apache.catalina.core.StandardEngine][log][173]-> Starting Servlet engine: [Apache Tomcat/9.0.76]
2024-07-03 11:19:31 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring embedded WebApplicationContext
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][286]-> Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-07-03 11:19:31 [INFO][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][292]-> Root WebApplicationContext: initialization completed in 1036 ms
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepositoryFilterRegistration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionRepositoryFilterConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@42257bdd'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestContextFilter'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'formContentFilter'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'characterEncodingFilter'
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping filters: springSessionRepositoryFilter urls=[/*] order=-2147483598, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping servlets: dispatcherServlet urls=[/]
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter][init][242]-> Filter 'requestContextFilter' configured for use
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1][init][242]-> Filter 'springSessionRepositoryFilter' configured for use
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter][init][242]-> Filter 'characterEncodingFilter' configured for use
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedFormContentFilter][init][242]-> Filter 'formContentFilter' configured for use
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'culturalAdminApplication'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'operationAspect'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'AGlobalExceptionHandlerController'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'fileController'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'adminConfig'
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'project.folder' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'super.admin.phones' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'admin.account' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'admin.password' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'web.api.url' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'loginController'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountService'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountMapper'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionFactory'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
2024-07-03 11:19:31 [DEBUG][org.springframework.core.LocalVariableTableParameterNameDiscoverer][inspectClass][105]-> Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1a78e77] - unable to determine constructor/method parameter names
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSource'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-07-03 11:19:31 [DEBUG][com.zaxxer.hikari.HikariConfig][attemptFromContextLoader][971]-> Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2024-07-03 11:19:31 [DEBUG][org.apache.ibatis.logging.LogFactory][setImplementation][135]-> Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2024-07-03 11:19:31 [DEBUG][org.mybatis.spring.SqlSessionFactoryBean][buildSqlSessionFactory][534]-> Property 'mapperLocations' was not specified or no matching resources found
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionTemplate'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuService'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuMapper'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appConfig'
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'project.folder' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'super.admin.phones' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountController'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAreaController'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAreaService'
2024-07-03 11:19:31 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAreaMapper'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'fileUtils'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysColumnController'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysColumnService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysColumnMapper'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuController'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleController'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleMapper'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuMapper'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysTagController'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysTagService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysTagMapper'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'imageUtils'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'baseMapper'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskExecutorBuilder'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'error'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameViewResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'conventionErrorViewResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorAttributes'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'basicErrorController'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@42257bdd'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@42257bdd'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcConversionService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcValidator'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'messageConverters'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringHttpMessageConverter'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonObjectMapper'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'parameterNamesModule'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonComponentModule'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonMixinModule'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonGeoModule'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortCustomizer'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableCustomizer'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationTaskExecutor'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2024-07-03 11:19:32 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][initialize][184]-> Initializing ExecutorService 'applicationTaskExecutor'
2024-07-03 11:19:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][625]-> ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'themeResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'flashMapManager'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:19:32 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.FileController:
	{ [/file/getAvatar/{userId}]}: getAvatar(HttpServletResponse,String)
	{ [/file/getImage/{imageFolder}/{imageName}]}: readPic(String,String,HttpServletResponse)
2024-07-03 11:19:32 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.LoginController:
	{ [/updateMyPwd]}: updateMyPwd(HttpSession,String)
	{ [/login]}: login(HttpSession,String,String,String)
	{ [/checkCode]}: checkCode(HttpServletResponse,HttpSession)
	{ [/logout]}: logout(HttpSession)
2024-07-03 11:19:32 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysAccountController:
	{ [/settings/updateStatus]}: updateStatus(Integer,Integer)
	{ [/settings/saveAccount]}: saveAccount(SysAccount)
	{ [/settings/delAccount]}: delAccount(Integer)
	{ [/settings/loadAccountList]}: loadDataList(SysAccountQuery)
	{ [/settings/updatePassword]}: updatePassword(Integer,String)
2024-07-03 11:19:32 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysAreaController:
	{ [/content/delArea]}: delArea(Integer)
	{ [/content/saveArea]}: saveArea(Integer,String,Integer,Integer,String,Integer,String)
	{ [/content/areaList]}: areaList(SysAreaQuery)
2024-07-03 11:19:32 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysColumnController:
	{ [/content/columnList]}: loadDataList(SysColumnQuery)
	{ [/content/saveColumn]}: saveMenu(SysColumn,MultipartFile)
	{ [/content/loadAllColumn4Select]}: loadAllColumn4Select(Integer)
	{ [/content/delColumn]}: delMenu(Integer)
	{ [/content/opColStatus]}: opColStatus(Integer,Integer)
2024-07-03 11:19:32 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysMenuController:
	{ [/settings/saveMenu]}: saveMenu(SysMenu)
	{ [/settings/delMenu]}: delMenu(Integer)
	{ [/settings/menuList]}: menuList()
2024-07-03 11:19:32 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysRoleController:
	{ [/settings/saveRole]}: saveRole(SysRole,String,String)
	{ [/settings/loadRoles]}: loadRoles(SysRoleQuery)
	{ [/settings/loadAllRoles]}: loadAllRoles()
	{ [/settings/saveRoleMenu]}: saveRoleMenu(Integer,String,String)
	{ [/settings/getRoleByRoleId]}: getRoleByRoleId(Integer)
	{ [/settings/delRole]}: delRole(Integer)
2024-07-03 11:19:32 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysTagController:
	{ [/content/saveTag]}: saveAccount(SysTag)
	{ [/content/delTag]}: delAccount(Integer)
	{ [/content/tagList]}: tagList(SysTagQuery)
2024-07-03 11:19:32 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-07-03 11:19:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 33 mappings in 'requestMappingHandlerMapping'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPatternParser'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUrlPathHelper'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPathMatcher'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameHandlerMapping'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:19:32 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlers][86]-> 'beanNameHandlerMapping' {}
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'routerFunctionMapping'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'resourceHandlerMapping'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:19:32 [DEBUG][org.springframework.web.servlet.config.annotation.WebMvcConfigurer][addResourceHandlers][335]-> Default resource handling disabled
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerFunctionAdapter'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerExceptionResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:19:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][initExceptionHandlerAdviceCache][307]-> ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcViewResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewNameTranslator'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultViewResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@42257bdd'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerViewResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanExporter'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'objectNamingStrategy'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@42257bdd'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanServer'
2024-07-03 11:19:32 [DEBUG][org.springframework.jmx.support.JmxUtils][locateMBeanServer][127]-> Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@591f989e
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2024-07-03 11:19:32 [DEBUG][org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin][afterPropertiesSet][131]-> Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationAvailability'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lettuceClientResources'
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.logging.InternalLoggerFactory][useSlf4JLoggerFactory][63]-> Using SLF4J as the default logging framework
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.resource.AddressResolverGroupProvider][<clinit>][37]-> Starting without optional netty's non-blocking DNS resolver library
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<clinit>][122]-> -Dio.netty.eventLoopThreads: 16
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2024-07-03 11:19:32 [DEBUG][io.netty.util.concurrent.GlobalEventExecutor][<clinit>][53]-> -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][100]-> -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][101]-> -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2024-07-03 11:19:32 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][129]-> -Dio.netty.leakDetection.level: simple
2024-07-03 11:19:32 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][130]-> -Dio.netty.leakDetection.targetRecords: 4
2024-07-03 11:19:32 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@383cdd4d
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent0][explicitNoUnsafeCause0][497]-> -Dio.netty.noUnsafe: false
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent0][javaVersion0][1001]-> Java version: 8
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][137]-> sun.misc.Unsafe.theUnsafe: available
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][161]-> sun.misc.Unsafe.copyMemory: available
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][193]-> sun.misc.Unsafe.storeFence: available
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][236]-> java.nio.Buffer.address: available
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][308]-> direct buffer constructor: available
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][386]-> java.nio.Bits.unaligned: available, true
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][460]-> jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][483]-> java.nio.DirectByteBuffer.<init>(long, {int,long}): available
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent][unsafeUnavailabilityCause0][1159]-> sun.misc.Unsafe: available
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent][tmpdir0][1289]-> -Dio.netty.tmpdir: C:\Users\17673\AppData\Local\Temp (java.io.tmpdir)
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent][bitMode0][1368]-> -Dio.netty.bitMode: 64 (sun.arch.data.model)
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent][isWindows0][1119]-> Platform: Windows
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][178]-> -Dio.netty.maxDirectMemory: 7098859520 bytes
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][185]-> -Dio.netty.uninitializedArrayAllocationThreshold: -1
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.CleanerJava6][<clinit>][92]-> java.nio.ByteBuffer.cleaner(): available
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][205]-> -Dio.netty.noPreferDirect: false
2024-07-03 11:19:32 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][1010]-> org.jctools-core.MpscChunkedArrayQueue: available
2024-07-03 11:19:32 [DEBUG][reactor.util.Loggers][debug][254]-> Using Slf4j logging framework
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.event.jfr.EventRecorderHolder][<clinit>][55]-> Starting without optional JFR support. JFR unavailable.
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<init>][227]-> LatencyUtils/HdrUtils are not available, metrics are disabled
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConnectionFactory'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisTemplate'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringRedisTemplate'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'java.lang.Object'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lifecycleProcessor'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveRedisTemplate'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'keyValueMappingContext'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisCustomConversions'
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisReferenceResolver'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConverter'
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueAdapter'
2024-07-03 11:19:32 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][start][246]-> Starting RedisMessageListenerContainer...
2024-07-03 11:19:32 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][lazyListen][290]-> Postpone listening for Redis messages until actual listeners are added.
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueTemplate'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfigurer'
2024-07-03 11:19:32 [DEBUG][org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer][getTemplateLoaderForPath][362]-> File system access not preferred: using SpringTemplateLoader
2024-07-03 11:19:32 [DEBUG][org.springframework.ui.freemarker.SpringTemplateLoader][<init>][62]-> SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60, started on Wed Jul 03 11:19:30 GMT+08:00 2024] and template loader path [classpath:/templates/]
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'freeMarkerConfiguration' via factory method to bean named 'freeMarkerConfigurer'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2024-07-03 11:19:32 [WARN][org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration][checkTemplateLocationExists][65]-> Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.check-template-location=false)
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jdbcTemplate'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration' via constructor to bean named 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryImplementationValidator'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryImplementationValidator' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryImplementationValidator' via constructor to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.RedisSessionConfiguration$SpringBootRedisHttpSessionConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cookieSerializer'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'cookieSerializer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'configureRedisAction'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.RedisSessionConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.session.redis-org.springframework.boot.autoconfigure.session.RedisSessionProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'configureRedisAction' via factory method to bean named 'spring.session.redis-org.springframework.boot.autoconfigure.session.RedisSessionProperties'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepository'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'org.springframework.boot.autoconfigure.session.RedisSessionConfiguration$SpringBootRedisHttpSessionConfiguration'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'sessionRepository'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRedisMessageListenerContainer'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRedisMessageListenerContainer' via factory method to bean named 'sessionRepository'
2024-07-03 11:19:32 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'enableRedisKeyspaceNotificationsInitializer'
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.RedisClient][connectStandaloneAsync][273]-> Trying to get a Redis connection for: redis://127.0.0.1?timeout=2s
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][157]-> -Dio.netty.allocator.numHeapArenas: 32
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][158]-> -Dio.netty.allocator.numDirectArenas: 32
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][160]-> -Dio.netty.allocator.pageSize: 8192
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][165]-> -Dio.netty.allocator.maxOrder: 9
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][169]-> -Dio.netty.allocator.chunkSize: 4194304
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][170]-> -Dio.netty.allocator.smallCacheSize: 256
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][171]-> -Dio.netty.allocator.normalCacheSize: 64
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][172]-> -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][173]-> -Dio.netty.allocator.cacheTrimInterval: 8192
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][174]-> -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][175]-> -Dio.netty.allocator.useCacheForAllThreads: false
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][176]-> -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][88]-> -Dio.netty.allocator.type: pooled
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][97]-> -Dio.netty.threadLocalDirectBufferSize: 0
2024-07-03 11:19:32 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][100]-> -Dio.netty.maxThreadLocalCharBufferSize: 16384
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.resource.KqueueProvider][<clinit>][73]-> Starting without optional kqueue library
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.resource.IOUringProvider][<clinit>][75]-> Starting without optional io_uring library
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.resource.EpollProvider][<clinit>][76]-> Starting without optional epoll library
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][allocate][112]-> Allocating executor io.netty.channel.nio.NioEventLoopGroup
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.channel.nio.NioEventLoopGroup
2024-07-03 11:19:32 [DEBUG][io.netty.channel.MultithreadEventLoopGroup][<clinit>][44]-> -Dio.netty.eventLoopThreads: 32
2024-07-03 11:19:32 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][110]-> -Dio.netty.noKeySetOptimization: false
2024-07-03 11:19:32 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][111]-> -Dio.netty.selectorAutoRebuildThreshold: 512
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][addReference][128]-> Adding reference to io.netty.channel.nio.NioEventLoopGroup@7ecb9e17, existing ref count 0
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1?timeout=2s
2024-07-03 11:19:32 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2024-07-03 11:19:32 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][79]-> -Dio.netty.processId: 9332 (auto-detected)
2024-07-03 11:19:32 [DEBUG][io.netty.util.NetUtil][<clinit>][148]-> -Djava.net.preferIPv4Stack: false
2024-07-03 11:19:32 [DEBUG][io.netty.util.NetUtil][<clinit>][149]-> -Djava.net.preferIPv6Addresses: false
2024-07-03 11:19:32 [DEBUG][io.netty.util.NetUtilInitializations][determineLoopback][145]-> Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2024-07-03 11:19:32 [DEBUG][io.netty.util.NetUtil][run][206]-> Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2024-07-03 11:19:32 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][101]-> -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
2024-07-03 11:19:33 [DEBUG][io.netty.util.Recycler][<clinit>][96]-> -Dio.netty.recycler.maxCapacityPerThread: 4096
2024-07-03 11:19:33 [DEBUG][io.netty.util.Recycler][<clinit>][97]-> -Dio.netty.recycler.ratio: 8
2024-07-03 11:19:33 [DEBUG][io.netty.util.Recycler][<clinit>][98]-> -Dio.netty.recycler.chunkSize: 32
2024-07-03 11:19:33 [DEBUG][io.netty.util.Recycler][<clinit>][99]-> -Dio.netty.recycler.blocking: false
2024-07-03 11:19:33 [DEBUG][io.netty.util.Recycler][<clinit>][100]-> -Dio.netty.recycler.batchFastThreadLocalOnly: true
2024-07-03 11:19:33 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][63]-> -Dio.netty.buffer.checkAccessible: true
2024-07-03 11:19:33 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][64]-> -Dio.netty.buffer.checkBounds: true
2024-07-03 11:19:33 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4ac17458
2024-07-03 11:19:33 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2024-07-03 11:19:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=AsyncCommand [type=CONFIG, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionEventHttpSessionListenerAdapter'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRepositoryFilter'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRepositoryFilter' via factory method to bean named 'sessionRepository'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$ServletSessionRepositoryConfiguration'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator' via constructor to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskSchedulerBuilder'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionManager'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionTemplate'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2024-07-03 11:19:33 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartResolver'
2024-07-03 11:19:33 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][434]-> Registering beans for JMX exposure on startup
2024-07-03 11:19:33 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-07-03 11:19:33 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][896]-> Bean with name 'dataSource' has been autodetected for JMX exposure
2024-07-03 11:19:33 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][669]-> Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2024-07-03 11:19:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase -2147483647
2024-07-03 11:19:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springBootLoggingLifecycle'
2024-07-03 11:19:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483646
2024-07-03 11:19:33 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Starting ProtocolHandler ["http-nio-9090"]
2024-07-03 11:19:33 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][start][220]-> Tomcat started on port(s): 9090 (http) with context path '/api'
2024-07-03 11:19:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerStartStop'
2024-07-03 11:19:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483647
2024-07-03 11:19:33 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][start][246]-> Starting RedisMessageListenerContainer...
2024-07-03 11:19:33 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1?timeout=2s
2024-07-03 11:19:33 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2024-07-03 11:19:33 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2024-07-03 11:19:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:19:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:19:33 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][doSubscribe][339]-> Subscribing to topics for RedisMessageListenerContainer.
2024-07-03 11:19:33 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][lambda$doSubscribe$0][324]-> RedisMessageListenerContainer listeners registered successfully.
2024-07-03 11:19:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springSessionRedisMessageListenerContainer'
2024-07-03 11:19:33 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerGracefulShutdown'
2024-07-03 11:19:33 [DEBUG][org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener][logAutoConfigurationReport][126]-> 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'freemarker.template.Configuration', 'org.springframework.ui.freemarker.FreeMarkerConfigurationFactory' (OnClassCondition)

   FreeMarkerServletWebConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#freeMarkerConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.freemarker.FreeMarkerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerServletWebConfiguration#freeMarkerViewResolver matched:
      - @ConditionalOnProperty (spring.freemarker.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (names: freeMarkerViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#redisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisSessionConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.core.RedisTemplate', 'org.springframework.session.data.redis.RedisIndexedSessionRepository' (OnClassCondition)
      - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.session.SessionRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisSessionConfiguration#configureRedisAction matched:
      - @ConditionalOnMissingBean (types: org.springframework.session.data.redis.config.ConfigureRedisAction; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SessionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.session.Session' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration#cookieSerializer matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.CookieHttpSessionIdResolverAvailable found non-matching nested conditions @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver, @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.NoComponentsAvailable @ConditionalOnMissingBean (types: org.springframework.session.web.http.HttpSessionIdResolver,org.springframework.session.web.http.CookieSerializer; SearchStrategy: all) did not find any beans (SessionAutoConfiguration.DefaultCookieSerializerCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.ServletSessionRepositoryConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.session.SessionRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SessionRepositoryFilterConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.session.web.http.SessionRepositoryFilter; SearchStrategy: all) found bean 'springSessionRepositoryFilter' (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerNonWebConfiguration:
      Did not match:
         - @ConditionalOnWebApplication found 'session' scope and did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerReactiveWebConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.hazelcast.HazelcastIndexedSessionRepository' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.jdbc.JdbcIndexedSessionRepository' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoOperations' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperFactoryBean' &baseMapper, &sysAccountMapper, &sysAreaMapper, &sysColumnMapper, &sysMenuMapper, &sysRole2MenuMapper, &sysRoleMapper, &sysTagMapper (OnBeanCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NoOpSessionConfiguration:
      Did not match:
         - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration.ReactiveSessionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.RememberMeServicesConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.authentication.RememberMeServices' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.SchedulingConfigurer,org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) found beans of type 'org.springframework.scheduling.annotation.SchedulingConfigurer' org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-07-03 11:19:33 [INFO][org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor][finishRegistration][315]-> No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2024-07-03 11:19:33 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-07-03 11:19:33 [INFO][com.cultural.CulturalAdminApplication][logStarted][61]-> Started CulturalAdminApplication in 2.889 seconds (JVM running for 3.472)
2024-07-03 11:19:33 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state LivenessState changed to CORRECT
2024-07-03 11:19:33 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-07-03 11:20:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:20:00 GMT+08:00 2024
2024-07-03 11:20:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:20:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:20:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:20:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:20:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:21:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:21:00 GMT+08:00 2024
2024-07-03 11:21:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:21:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:21:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:21:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:22:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:22:00 GMT+08:00 2024
2024-07-03 11:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:22:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:22:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:22:09 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03 11:22:09 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][525]-> Initializing Servlet 'dispatcherServlet'
2024-07-03 11:22:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][522]-> Detected StandardServletMultipartResolver
2024-07-03 11:22:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][546]-> Detected AcceptHeaderLocaleResolver
2024-07-03 11:22:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][571]-> Detected FixedThemeResolver
2024-07-03 11:22:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][721]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@787d1f9c
2024-07-03 11:22:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][785]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@3f048c86
2024-07-03 11:22:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initServletBean][542]-> enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-03 11:22:09 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][547]-> Completed initialization in 1 ms
2024-07-03 11:22:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/tagList", parameters={}
2024-07-03 11:22:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:22:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:22:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:22:09 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:22:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysTagController#tagList(SysTagQuery)
2024-07-03 11:22:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:22:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cb6ca04] was not registered for synchronization because synchronization is not active
2024-07-03 11:22:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1103]-> HikariCPDatasource - configuration:
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> allowPoolSuspension................................false
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> autoCommit................................true
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> catalog................................none
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionInitSql................................none
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTestQuery................................"SELECT 1"
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTimeout................................30000
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSource................................none
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceClassName................................none
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceJNDI................................none
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceProperties................................{password=<masked>}
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> driverClassName................................"com.mysql.cj.jdbc.Driver"
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> exceptionOverrideClassName................................none
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckProperties................................{}
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckRegistry................................none
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> idleTimeout................................180000
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> initializationFailTimeout................................1
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> isolateInternalQueries................................false
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> jdbcUrl................................jdbc:mysql://127.0.0.1:3306/cultural?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> keepaliveTime................................0
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> leakDetectionThreshold................................0
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maxLifetime................................1800000
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maximumPoolSize................................10
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricRegistry................................none
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricsTrackerFactory................................none
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> minimumIdle................................5
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> password................................<masked>
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> poolName................................"HikariCPDatasource"
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> readOnly................................false
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> registerMbeans................................false
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> scheduledExecutor................................none
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> schema................................none
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> threadFactory................................internal
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> transactionIsolation................................default
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> username................................"root"
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> validationTimeout................................5000
2024-07-03 11:22:09 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][110]-> HikariCPDatasource - Starting...
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][checkFailFast][565]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f11169
2024-07-03 11:22:09 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][123]-> HikariCPDatasource - Start completed.
2024-07-03 11:22:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@230709319 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:22:09 [DEBUG][com.cultural.mappers.SysTagMapper.selectCount][debug][159]-> ==>  Preparing: SELECT count(1) FROM sys_tag 
2024-07-03 11:22:09 [DEBUG][com.cultural.mappers.SysTagMapper.selectCount][debug][159]-> ==> Parameters: 
2024-07-03 11:22:09 [DEBUG][com.cultural.mappers.SysTagMapper.selectCount][debug][159]-> <==      Total: 1
2024-07-03 11:22:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cb6ca04]
2024-07-03 11:22:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:22:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3741588d] was not registered for synchronization because synchronization is not active
2024-07-03 11:22:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:22:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@921706529 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:22:09 [DEBUG][com.cultural.mappers.SysTagMapper.selectList][debug][159]-> ==>  Preparing: SELECT tag_id,tag_name,tag_type,tag_color,create_time, last_update_time FROM sys_tag order by create_time desc limit ?,? 
2024-07-03 11:22:09 [DEBUG][com.cultural.mappers.SysTagMapper.selectList][debug][159]-> ==> Parameters: 0(Integer), 15(Integer)
2024-07-03 11:22:09 [DEBUG][com.cultural.mappers.SysTagMapper.selectList][debug][159]-> <==      Total: 0
2024-07-03 11:22:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3741588d]
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=1, active=0, idle=1, waiting=0)
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=1, active=0, idle=1, waiting=0)
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@5f6d3765
2024-07-03 11:22:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:22:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@2e3faac0]
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@7a404da3
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@1423465d
2024-07-03 11:22:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:22:09 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@3b331567
2024-07-03 11:22:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After adding stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:22:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:22:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:22:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:23:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:23:00 GMT+08:00 2024
2024-07-03 11:23:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:23:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:23:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:23:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:23:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:23:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:23:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:23:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:23:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:23:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:23:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:24:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:24:00 GMT+08:00 2024
2024-07-03 11:24:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:24:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:24:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:24:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:24:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:24:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:24:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:24:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:24:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/saveTag", parameters={multipart}
2024-07-03 11:24:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:24:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:24:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:24:14 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:24:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysTagController#saveAccount(SysTag)
2024-07-03 11:24:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:24:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67eef875] was not registered for synchronization because synchronization is not active
2024-07-03 11:24:14 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:24:14 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1992423933 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:24:14 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==>  Preparing: select tag_id,tag_name,tag_type,tag_color,create_time, last_update_time from sys_tag where tag_name=? 
2024-07-03 11:24:14 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==> Parameters: 鸿桥(String)
2024-07-03 11:24:14 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> <==      Total: 0
2024-07-03 11:24:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67eef875]
2024-07-03 11:24:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:24:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48c95a89] was not registered for synchronization because synchronization is not active
2024-07-03 11:24:14 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:24:14 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1013754467 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:24:14 [DEBUG][com.cultural.mappers.SysTagMapper.insert][debug][159]-> ==>  Preparing: INSERT INTO sys_tag ( tag_name, tag_color, create_time ) values ( ?, ?, ? ) 
2024-07-03 11:24:14 [DEBUG][com.cultural.mappers.SysTagMapper.insert][debug][159]-> ==> Parameters: 鸿桥(String), #2d2d2d(String), 2024-07-03 11:24:14.875(Timestamp)
2024-07-03 11:24:14 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48c95a89]
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.xml.XmlBeanDefinitionReader][doLoadBeanDefinitions][393]-> Loaded 11 bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'DB2'
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'Derby'
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'H2'
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'HDB'
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'HSQL'
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'Informix'
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'MS-SQL'
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'MySQL'
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'Oracle'
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'PostgreSQL'
2024-07-03 11:24:14 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'Sybase'
2024-07-03 11:24:14 [DEBUG][org.springframework.jdbc.support.SQLErrorCodesFactory][resolveErrorCodes][223]-> Looking up default SQLErrorCodes for DataSource [com.zaxxer.hikari.HikariDataSource@5d7911d5]
2024-07-03 11:24:14 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:24:14 [DEBUG][org.springframework.jdbc.support.SQLErrorCodesFactory][getErrorCodes][181]-> SQL error codes for 'MySQL' found
2024-07-03 11:24:14 [DEBUG][org.springframework.jdbc.support.SQLErrorCodesFactory][registerDatabase][267]-> Caching SQL error codes for DataSource [com.zaxxer.hikari.HikariDataSource@5d7911d5]: database product name is 'MySQL'
2024-07-03 11:24:14 [DEBUG][org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator][logTranslation][407]-> Translating SQLException with SQL state 'HY000', error code '1364', message [Field 'tag_id' doesn't have a default value] for task [
### Error updating database.  Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
### The error may involve com.cultural.mappers.SysTagMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO sys_tag     ( tag_name,                  tag_color,              create_time )      values ( ?,                  ?,              ? )
### Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
]
2024-07-03 11:24:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][doResolveHandlerMethodException][416]-> Using @ExceptionHandler com.cultural.controller.AGlobalExceptionHandlerController#handleException(Exception, HttpServletRequest)
2024-07-03 11:24:14 [ERROR][com.cultural.controller.AGlobalExceptionHandlerController][handleException][25]-> 请求错误，请求地址http://127.0.0.1:9090/api/content/saveTag,错误信息:
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
### The error may involve com.cultural.mappers.SysTagMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO sys_tag     ( tag_name,                  tag_color,              create_time )      values ( ?,                  ?,              ? )
### Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
; Field 'tag_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'tag_id' doesn't have a default value
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:251)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy77.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy85.insert(Unknown Source)
	at com.cultural.service.impl.SysTagServiceImpl.saveTag(SysTagServiceImpl.java:146)
	at com.cultural.controller.SysTagController.saveAccount(SysTagController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: Field 'tag_id' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 63 common frames omitted
2024-07-03 11:24:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:24:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@a1ab95b]
2024-07-03 11:24:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][resolveException][146]-> Resolved [org.springframework.dao.DataIntegrityViolationException: <EOL><EOL>### Error updating database.  Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value<EOL><EOL>### The error may involve com.cultural.mappers.SysTagMapper.insert-Inline<EOL><EOL>### The error occurred while setting parameters<EOL><EOL>### SQL: INSERT INTO sys_tag     ( tag_name,                  tag_color,              create_time )      values ( ?,                  ?,              ? )<EOL><EOL>### Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value<EOL>; Field 'tag_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'tag_id' doesn't have a default value]
2024-07-03 11:24:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:24:14 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:24:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:24:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:24:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:25:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:25:00 GMT+08:00 2024
2024-07-03 11:25:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:25:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:25:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:25:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:25:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:25:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:25:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:25:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:25:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/saveTag", parameters={multipart}
2024-07-03 11:25:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:25:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:25:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:25:23 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:25:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysTagController#saveAccount(SysTag)
2024-07-03 11:25:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:25:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e1fa91b] was not registered for synchronization because synchronization is not active
2024-07-03 11:25:23 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:25:23 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1901281582 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:25:23 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==>  Preparing: select tag_id,tag_name,tag_type,tag_color,create_time, last_update_time from sys_tag where tag_name=? 
2024-07-03 11:25:23 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==> Parameters: 鸿桥(String)
2024-07-03 11:25:23 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> <==      Total: 0
2024-07-03 11:25:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e1fa91b]
2024-07-03 11:25:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:25:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9b836be] was not registered for synchronization because synchronization is not active
2024-07-03 11:25:23 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:25:23 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@724752883 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:25:23 [DEBUG][com.cultural.mappers.SysTagMapper.insert][debug][159]-> ==>  Preparing: INSERT INTO sys_tag ( tag_name, tag_color, create_time ) values ( ?, ?, ? ) 
2024-07-03 11:25:23 [DEBUG][com.cultural.mappers.SysTagMapper.insert][debug][159]-> ==> Parameters: 鸿桥(String), #2d2d2d(String), 2024-07-03 11:25:23.558(Timestamp)
2024-07-03 11:25:23 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9b836be]
2024-07-03 11:25:23 [DEBUG][org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator][logTranslation][407]-> Translating SQLException with SQL state 'HY000', error code '1364', message [Field 'tag_id' doesn't have a default value] for task [
### Error updating database.  Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
### The error may involve com.cultural.mappers.SysTagMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO sys_tag     ( tag_name,                  tag_color,              create_time )      values ( ?,                  ?,              ? )
### Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
]
2024-07-03 11:25:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][doResolveHandlerMethodException][416]-> Using @ExceptionHandler com.cultural.controller.AGlobalExceptionHandlerController#handleException(Exception, HttpServletRequest)
2024-07-03 11:25:23 [ERROR][com.cultural.controller.AGlobalExceptionHandlerController][handleException][25]-> 请求错误，请求地址http://127.0.0.1:9090/api/content/saveTag,错误信息:
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
### The error may involve com.cultural.mappers.SysTagMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO sys_tag     ( tag_name,                  tag_color,              create_time )      values ( ?,                  ?,              ? )
### Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
; Field 'tag_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'tag_id' doesn't have a default value
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:251)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy77.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy85.insert(Unknown Source)
	at com.cultural.service.impl.SysTagServiceImpl.saveTag(SysTagServiceImpl.java:146)
	at com.cultural.controller.SysTagController.saveAccount(SysTagController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: Field 'tag_id' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 63 common frames omitted
2024-07-03 11:25:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:25:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4003a78a]
2024-07-03 11:25:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][resolveException][146]-> Resolved [org.springframework.dao.DataIntegrityViolationException: <EOL><EOL>### Error updating database.  Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value<EOL><EOL>### The error may involve com.cultural.mappers.SysTagMapper.insert-Inline<EOL><EOL>### The error occurred while setting parameters<EOL><EOL>### SQL: INSERT INTO sys_tag     ( tag_name,                  tag_color,              create_time )      values ( ?,                  ?,              ? )<EOL><EOL>### Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value<EOL>; Field 'tag_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'tag_id' doesn't have a default value]
2024-07-03 11:25:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:25:23 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:25:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:25:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:25:39 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:26:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:26:00 GMT+08:00 2024
2024-07-03 11:26:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:26:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:26:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:26:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:26:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:26:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:26:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:26:09 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:26:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/saveTag", parameters={multipart}
2024-07-03 11:26:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:26:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:26:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:26:39 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:26:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysTagController#saveAccount(SysTag)
2024-07-03 11:26:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:26:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:26:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:26:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:26:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6407d73b] was not registered for synchronization because synchronization is not active
2024-07-03 11:26:49 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:26:49 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1391164899 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:26:49 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==>  Preparing: select tag_id,tag_name,tag_type,tag_color,create_time, last_update_time from sys_tag where tag_name=? 
2024-07-03 11:26:49 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==> Parameters: 鸿桥(String)
2024-07-03 11:26:49 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> <==      Total: 0
2024-07-03 11:26:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6407d73b]
2024-07-03 11:27:07 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:27:00 GMT+08:00 2024
2024-07-03 11:27:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:27:22 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:27:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:27:22 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:27:22 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:27:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:27:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:27:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:27:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a99b530] was not registered for synchronization because synchronization is not active
2024-07-03 11:27:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:27:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:27:22 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:27:22 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1266502677 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:27:22 [DEBUG][com.cultural.mappers.SysTagMapper.insert][debug][159]-> ==>  Preparing: INSERT INTO sys_tag ( tag_name, tag_color, create_time ) values ( ?, ?, ? ) 
2024-07-03 11:27:22 [DEBUG][com.cultural.mappers.SysTagMapper.insert][debug][159]-> ==> Parameters: 鸿桥(String), #2d2d2d(String), 2024-07-03 11:27:07.324(Timestamp)
2024-07-03 11:27:22 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a99b530]
2024-07-03 11:27:22 [DEBUG][org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator][logTranslation][407]-> Translating SQLException with SQL state 'HY000', error code '1364', message [Field 'tag_id' doesn't have a default value] for task [
### Error updating database.  Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
### The error may involve com.cultural.mappers.SysTagMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO sys_tag     ( tag_name,                  tag_color,              create_time )      values ( ?,                  ?,              ? )
### Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
]
2024-07-03 11:30:49 [WARN][com.zaxxer.hikari.pool.HikariPool][run][788]-> HikariCPDatasource - Thread starvation or clock leap detected (housekeeper delta=3m26s785ms594µs300ns).
2024-07-03 11:30:49 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:30:00 GMT+08:00 2024
2024-07-03 11:30:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:30:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][doResolveHandlerMethodException][416]-> Using @ExceptionHandler com.cultural.controller.AGlobalExceptionHandlerController#handleException(Exception, HttpServletRequest)
2024-07-03 11:30:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:30:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:30:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:30:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:30:49 [ERROR][com.cultural.controller.AGlobalExceptionHandlerController][handleException][25]-> 请求错误，请求地址http://127.0.0.1:9090/api/content/saveTag,错误信息:
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
### The error may involve com.cultural.mappers.SysTagMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO sys_tag     ( tag_name,                  tag_color,              create_time )      values ( ?,                  ?,              ? )
### Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value
; Field 'tag_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'tag_id' doesn't have a default value
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:251)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy77.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy85.insert(Unknown Source)
	at com.cultural.service.impl.SysTagServiceImpl.saveTag(SysTagServiceImpl.java:146)
	at com.cultural.controller.SysTagController.saveAccount(SysTagController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: Field 'tag_id' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy118.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 63 common frames omitted
2024-07-03 11:30:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/saveTag", parameters={multipart}
2024-07-03 11:30:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:30:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:30:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:30:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:30:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:30:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:30:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@6735b17]
2024-07-03 11:30:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:30:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:30:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][resolveException][146]-> Resolved [org.springframework.dao.DataIntegrityViolationException: <EOL><EOL>### Error updating database.  Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value<EOL><EOL>### The error may involve com.cultural.mappers.SysTagMapper.insert-Inline<EOL><EOL>### The error occurred while setting parameters<EOL><EOL>### SQL: INSERT INTO sys_tag     ( tag_name,                  tag_color,              create_time )      values ( ?,                  ?,              ? )<EOL><EOL>### Cause: java.sql.SQLException: Field 'tag_id' doesn't have a default value<EOL>; Field 'tag_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'tag_id' doesn't have a default value]
2024-07-03 11:30:49 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:30:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:30:49 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:30:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysTagController#saveAccount(SysTag)
2024-07-03 11:30:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:30:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47deb575] was not registered for synchronization because synchronization is not active
2024-07-03 11:30:49 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:30:49 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2045842242 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:30:49 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==>  Preparing: select tag_id,tag_name,tag_type,tag_color,create_time, last_update_time from sys_tag where tag_name=? 
2024-07-03 11:30:49 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==> Parameters: 鸿桥(String)
2024-07-03 11:30:49 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> <==      Total: 0
2024-07-03 11:30:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47deb575]
2024-07-03 11:30:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:30:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@153ec06] was not registered for synchronization because synchronization is not active
2024-07-03 11:30:49 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:30:49 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1660144805 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:30:49 [DEBUG][com.cultural.mappers.SysTagMapper.insert][debug][159]-> ==>  Preparing: INSERT INTO sys_tag ( tag_name, tag_color, create_time ) values ( ?, ?, ? ) 
2024-07-03 11:30:49 [DEBUG][com.cultural.mappers.SysTagMapper.insert][debug][159]-> ==> Parameters: 鸿桥(String), #2d2d2d(String), 2024-07-03 11:30:49.442(Timestamp)
2024-07-03 11:30:49 [DEBUG][com.cultural.mappers.SysTagMapper.insert][debug][159]-> <==    Updates: 1
2024-07-03 11:30:49 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@153ec06]
2024-07-03 11:30:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:30:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4fadca9]
2024-07-03 11:30:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:30:49 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:31:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:31:00 GMT+08:00 2024
2024-07-03 11:31:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/saveTag", parameters={multipart}
2024-07-03 11:31:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:03 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:31:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysTagController#saveAccount(SysTag)
2024-07-03 11:31:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:31:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77964653] was not registered for synchronization because synchronization is not active
2024-07-03 11:31:03 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:31:03 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1042281089 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:31:03 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==>  Preparing: select tag_id,tag_name,tag_type,tag_color,create_time, last_update_time from sys_tag where tag_name=? 
2024-07-03 11:31:03 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==> Parameters: 鸿桥1(String)
2024-07-03 11:31:03 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> <==      Total: 0
2024-07-03 11:31:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77964653]
2024-07-03 11:31:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:31:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@468d7d70] was not registered for synchronization because synchronization is not active
2024-07-03 11:31:03 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:31:03 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1388001674 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:31:03 [DEBUG][com.cultural.mappers.SysTagMapper.updateByTagId][debug][159]-> ==>  Preparing: UPDATE sys_tag SET tag_name = ?, tag_color = ?, last_update_time = ? where tag_id=? 
2024-07-03 11:31:03 [DEBUG][com.cultural.mappers.SysTagMapper.updateByTagId][debug][159]-> ==> Parameters: 鸿桥1(String), #2d2d2d(String), 2024-07-03 11:31:03.846(Timestamp), 1(Integer)
2024-07-03 11:31:03 [DEBUG][com.cultural.mappers.SysTagMapper.updateByTagId][debug][159]-> <==    Updates: 1
2024-07-03 11:31:03 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@468d7d70]
2024-07-03 11:31:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:31:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@70c2075f]
2024-07-03 11:31:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:31:03 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:31:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:31:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:31:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:31:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/saveTag", parameters={multipart}
2024-07-03 11:31:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:24 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:31:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysTagController#saveAccount(SysTag)
2024-07-03 11:31:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:31:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f4ad9c7] was not registered for synchronization because synchronization is not active
2024-07-03 11:31:24 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:31:24 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1762488420 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:31:24 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==>  Preparing: select tag_id,tag_name,tag_type,tag_color,create_time, last_update_time from sys_tag where tag_name=? 
2024-07-03 11:31:24 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==> Parameters: 鸿桥(String)
2024-07-03 11:31:24 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> <==      Total: 0
2024-07-03 11:31:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f4ad9c7]
2024-07-03 11:31:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:31:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@380d5ebd] was not registered for synchronization because synchronization is not active
2024-07-03 11:31:24 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:31:24 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1550500943 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:31:24 [DEBUG][com.cultural.mappers.SysTagMapper.updateByTagId][debug][159]-> ==>  Preparing: UPDATE sys_tag SET tag_name = ?, tag_color = ?, last_update_time = ? where tag_id=? 
2024-07-03 11:31:24 [DEBUG][com.cultural.mappers.SysTagMapper.updateByTagId][debug][159]-> ==> Parameters: 鸿桥(String), #2d2d2d(String), 2024-07-03 11:31:24.945(Timestamp), 1(Integer)
2024-07-03 11:31:24 [DEBUG][com.cultural.mappers.SysTagMapper.updateByTagId][debug][159]-> <==    Updates: 1
2024-07-03 11:31:24 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@380d5ebd]
2024-07-03 11:31:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:31:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@49c314f8]
2024-07-03 11:31:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:31:24 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:31:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/areaList", parameters={multipart}
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysAreaController#areaList(SysAreaQuery)
2024-07-03 11:31:39 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:31:39 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@651fa0a4] was not registered for synchronization because synchronization is not active
2024-07-03 11:31:39 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:31:39 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@236566482 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:31:39 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==>  Preparing: SELECT area_id,area_name,p_id,area_des,img_url, type,sort FROM sys_area order by sort asc 
2024-07-03 11:31:39 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:31:39 [DEBUG][com.cultural.mappers.SysAreaMapper.selectList][debug][159]-> <==      Total: 4
2024-07-03 11:31:39 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@651fa0a4]
2024-07-03 11:31:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:31:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5ac02bd6]
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:39 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:39 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 11:31:41 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:31:41 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@420b3d37] was not registered for synchronization because synchronization is not active
2024-07-03 11:31:41 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:31:41 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1400703142 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:31:41 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 11:31:41 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:31:41 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 21
2024-07-03 11:31:41 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@420b3d37]
2024-07-03 11:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@6698b6c4]
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:31:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:31:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:31:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:32:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:32:00 GMT+08:00 2024
2024-07-03 11:32:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:32:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:32:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:32:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/saveMenu", parameters={multipart}
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#saveMenu(SysMenu)
2024-07-03 11:32:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:32:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29016640] was not registered for synchronization because synchronization is not active
2024-07-03 11:32:37 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:32:37 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2130361042 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:32:37 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> ==>  Preparing: INSERT INTO sys_menu ( menu_name, menu_type, menu_url, p_id, sort, permission ) values ( ?, ?, ?, ?, ?, ? ) 
2024-07-03 11:32:37 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> ==> Parameters: 标签管理(String), 0(Integer), /content/tag(String), 1012(Integer), 2(Integer), content_tag(String)
2024-07-03 11:32:37 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> <==    Updates: 1
2024-07-03 11:32:37 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> ==>  Preparing: SELECT LAST_INSERT_ID() 
2024-07-03 11:32:37 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> ==> Parameters: 
2024-07-03 11:32:37 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> <==      Total: 1
2024-07-03 11:32:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29016640]
2024-07-03 11:32:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:32:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@23b3e5b]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 11:32:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:32:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12bcb89d] was not registered for synchronization because synchronization is not active
2024-07-03 11:32:37 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:32:37 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@796657272 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:32:37 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 11:32:37 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:32:37 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 22
2024-07-03 11:32:37 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12bcb89d]
2024-07-03 11:32:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:32:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@692c03e4]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:32:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:32:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:32:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:32:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:32:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:33:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:33:00 GMT+08:00 2024
2024-07-03 11:33:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/saveMenu", parameters={multipart}
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#saveMenu(SysMenu)
2024-07-03 11:33:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:33:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70c1dc5b] was not registered for synchronization because synchronization is not active
2024-07-03 11:33:02 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:33:02 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1296726377 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:33:02 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> ==>  Preparing: INSERT INTO sys_menu ( menu_name, menu_type, p_id, sort, permission ) values ( ?, ?, ?, ?, ? ) 
2024-07-03 11:33:02 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> ==> Parameters: 标签列表(String), 1(Integer), 1022(Integer), 0(Integer), content_tag_list(String)
2024-07-03 11:33:02 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> <==    Updates: 1
2024-07-03 11:33:02 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> ==>  Preparing: SELECT LAST_INSERT_ID() 
2024-07-03 11:33:02 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> ==> Parameters: 
2024-07-03 11:33:02 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> <==      Total: 1
2024-07-03 11:33:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70c1dc5b]
2024-07-03 11:33:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:33:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@289ecf3f]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 11:33:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:33:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66bd52e7] was not registered for synchronization because synchronization is not active
2024-07-03 11:33:02 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:33:02 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@944708322 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:33:02 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 11:33:02 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:33:02 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 23
2024-07-03 11:33:02 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66bd52e7]
2024-07-03 11:33:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:33:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@49e99039]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:33:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:33:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:33:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/saveMenu", parameters={multipart}
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#saveMenu(SysMenu)
2024-07-03 11:33:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:33:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf9dec1] was not registered for synchronization because synchronization is not active
2024-07-03 11:33:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:33:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1113377161 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:33:30 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> ==>  Preparing: INSERT INTO sys_menu ( menu_name, menu_type, p_id, sort, permission ) values ( ?, ?, ?, ?, ? ) 
2024-07-03 11:33:30 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> ==> Parameters: 新增/修改标签(String), 1(Integer), 1022(Integer), 1(Integer), content_tag_edit(String)
2024-07-03 11:33:30 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> <==    Updates: 1
2024-07-03 11:33:30 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> ==>  Preparing: SELECT LAST_INSERT_ID() 
2024-07-03 11:33:30 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> ==> Parameters: 
2024-07-03 11:33:30 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> <==      Total: 1
2024-07-03 11:33:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cf9dec1]
2024-07-03 11:33:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:33:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@29d4be75]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 11:33:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:33:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56f58798] was not registered for synchronization because synchronization is not active
2024-07-03 11:33:30 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:33:30 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1325927298 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:33:30 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 11:33:30 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:33:30 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 24
2024-07-03 11:33:30 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56f58798]
2024-07-03 11:33:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:33:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@1a7545b2]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/saveMenu", parameters={multipart}
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#saveMenu(SysMenu)
2024-07-03 11:33:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:33:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3774a577] was not registered for synchronization because synchronization is not active
2024-07-03 11:33:47 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:33:47 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@693184834 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:33:47 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> ==>  Preparing: INSERT INTO sys_menu ( menu_name, menu_type, p_id, sort, permission ) values ( ?, ?, ?, ?, ? ) 
2024-07-03 11:33:47 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> ==> Parameters: 删除标签(String), 1(Integer), 1022(Integer), 2(Integer), content_tag_del(String)
2024-07-03 11:33:47 [DEBUG][com.cultural.mappers.SysMenuMapper.insert][debug][159]-> <==    Updates: 1
2024-07-03 11:33:47 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> ==>  Preparing: SELECT LAST_INSERT_ID() 
2024-07-03 11:33:47 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> ==> Parameters: 
2024-07-03 11:33:47 [DEBUG][com.cultural.mappers.SysMenuMapper.insert!selectKey][debug][159]-> <==      Total: 1
2024-07-03 11:33:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3774a577]
2024-07-03 11:33:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:33:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@368d9e1]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 11:33:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:33:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54850034] was not registered for synchronization because synchronization is not active
2024-07-03 11:33:47 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:33:47 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@326180978 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:33:47 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 11:33:47 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:33:47 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 25
2024-07-03 11:33:47 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54850034]
2024-07-03 11:33:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:33:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@343e56d8]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:33:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:33:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:33:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 11:33:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 11:33:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:33:51 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b6e8c65] was not registered for synchronization because synchronization is not active
2024-07-03 11:33:52 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:33:52 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@748556449 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:33:52 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 11:33:52 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:33:52 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 11:33:52 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b6e8c65]
2024-07-03 11:33:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:33:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5e9da55a]
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 11:33:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:33:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc107e4] was not registered for synchronization because synchronization is not active
2024-07-03 11:33:55 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:33:55 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1425355872 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:33:55 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 11:33:55 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:33:55 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 25
2024-07-03 11:33:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fc107e4]
2024-07-03 11:33:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:33:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4c7a16ae]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 11:33:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:33:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@366380b4] was not registered for synchronization because synchronization is not active
2024-07-03 11:33:55 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:33:55 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@409287503 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:33:55 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 11:33:55 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:33:55 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 11:33:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@366380b4]
2024-07-03 11:33:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:33:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@4cd8fb46]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:33:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:33:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:33:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:34:00 GMT+08:00 2024
2024-07-03 11:34:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:34:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:34:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:34:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:34:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:34:49 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:34:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 11:34:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:34:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e5bbe1f] was not registered for synchronization because synchronization is not active
2024-07-03 11:34:55 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:34:55 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@2093150042 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:34:55 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 11:34:55 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:34:55 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 11:34:55 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e5bbe1f]
2024-07-03 11:34:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:34:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@7ee2ca14]
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:34:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:34:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:34:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:00 [DEBUG][org.springframework.session.data.redis.RedisSessionExpirationPolicy][cleanExpiredSessions][128]-> Cleaning up sessions expiring at Wed Jul 03 11:35:00 GMT+08:00 2024
2024-07-03 11:35:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SMEMBERS, output=ValueSetOutput [output=[], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/logout", parameters={multipart}
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.LoginController#logout(HttpSession)
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SREM, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.session.data.redis.RedisIndexedSessionRepository][onMessage][552]-> Publishing SessionDestroyedEvent for session 0bdf9fc3-1ce7-40df-aa1b-5cca40e5edba
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=DEL, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:35:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@a417f34]
2024-07-03 11:35:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:35:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> GET "/api/checkCode?time=Wed%20Jul%2003%202024%2011:35:02%20GMT+0800%20(GMT+08:00)", parameters={masked}
2024-07-03 11:35:02 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:35:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.LoginController#checkCode(HttpServletResponse, HttpSession)
2024-07-03 11:35:02 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:35:02 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][318]-> A new session was created. To help you troubleshoot where the session was created we provided a StackTrace (this is not an error). You can prevent this from appearing by disabling DEBUG logging for org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER
java.lang.RuntimeException: For debugging purposes only (not an error)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:320)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:332)
	at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:193)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:139)
	at org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver.resolveArgument(ServletRequestMethodArgumentResolver.java:124)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PUBLISH, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:35:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/login", parameters={multipart}
2024-07-03 11:35:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.LoginController#login(HttpSession, String, String, String)
2024-07-03 11:35:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:35:08 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4677a949] was not registered for synchronization because synchronization is not active
2024-07-03 11:35:08 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:35:08 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1018702620 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:35:09 [DEBUG][com.cultural.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==>  Preparing: select user_id,phone,user_name,password,position, status,roles,area,create_time,email from sys_account where phone=? 
2024-07-03 11:35:09 [DEBUG][com.cultural.mappers.SysAccountMapper.selectByPhone][debug][159]-> ==> Parameters: 13026636499(String)
2024-07-03 11:35:09 [DEBUG][com.cultural.mappers.SysAccountMapper.selectByPhone][debug][159]-> <==      Total: 1
2024-07-03 11:35:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4677a949]
2024-07-03 11:35:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:35:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d9cd387] was not registered for synchronization because synchronization is not active
2024-07-03 11:35:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:35:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@802013089 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:35:09 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 11:35:09 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:35:09 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 25
2024-07-03 11:35:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d9cd387]
2024-07-03 11:35:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:35:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@7fcffcfa]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/settings/menuList", parameters={multipart}
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysMenuController#menuList()
2024-07-03 11:35:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:35:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@358764a4] was not registered for synchronization because synchronization is not active
2024-07-03 11:35:09 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:35:09 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1062907683 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:35:09 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==>  Preparing: SELECT menu_id,menu_name,menu_type,menu_url,p_id, sort,permission,icon FROM sys_menu order by sort asc 
2024-07-03 11:35:09 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:35:09 [DEBUG][com.cultural.mappers.SysMenuMapper.selectList][debug][159]-> <==      Total: 25
2024-07-03 11:35:09 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@358764a4]
2024-07-03 11:35:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:35:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@f0971c]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/columnList", parameters={multipart}
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysColumnController#loadDataList(SysColumnQuery)
2024-07-03 11:35:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:35:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d4045f] was not registered for synchronization because synchronization is not active
2024-07-03 11:35:10 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:35:10 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1896215228 wrapping com.mysql.cj.jdbc.ConnectionImpl@3f11169] will not be managed by Spring
2024-07-03 11:35:10 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==>  Preparing: SELECT column_id,column_name,sort,icon_path,bg_color, column_cover,p_id,type,column_url,status FROM sys_column order by sort asc 
2024-07-03 11:35:10 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> ==> Parameters: 
2024-07-03 11:35:10 [DEBUG][com.cultural.mappers.SysColumnMapper.selectList][debug][159]-> <==      Total: 11
2024-07-03 11:35:10 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d4045f]
2024-07-03 11:35:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:35:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@5534be1]
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HMSET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SADD, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=APPEND, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PEXPIRE, output=BooleanOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:35:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:35:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:35:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:35:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-07-03 11:35:35 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-07-03 11:35:35 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][doClose][1051]-> Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60, started on Wed Jul 03 11:19:30 GMT+08:00 2024
2024-07-03 11:35:35 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-07-03 11:35:35 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483647
2024-07-03 11:35:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:35:35 [DEBUG][io.lettuce.core.RedisChannelHandler][closeAsync][141]-> closeAsync()
2024-07-03 11:35:35 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][doUnsubscribe][414]-> Stopped listening.
2024-07-03 11:35:35 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][stop][379]-> Stopped RedisMessageListenerContainer.
2024-07-03 11:35:35 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'springSessionRedisMessageListenerContainer' completed its stop procedure
2024-07-03 11:35:35 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerGracefulShutdown' completed its stop procedure
2024-07-03 11:35:35 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483646
2024-07-03 11:35:35 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerStartStop' completed its stop procedure
2024-07-03 11:35:35 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase -2147483647
2024-07-03 11:35:35 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'springBootLoggingLifecycle' completed its stop procedure
2024-07-03 11:35:35 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][stop][379]-> Stopped RedisMessageListenerContainer.
2024-07-03 11:35:35 [DEBUG][io.lettuce.core.RedisChannelHandler][closeAsync][141]-> closeAsync()
2024-07-03 11:35:35 [DEBUG][io.lettuce.core.AbstractRedisClient][shutdownAsync][539]-> Initiate shutdown (100, 100, MILLISECONDS)
2024-07-03 11:35:35 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][doRelease][281]-> Release executor io.netty.channel.nio.NioEventLoopGroup@7ecb9e17
2024-07-03 11:35:35 [DEBUG][io.netty.buffer.PoolThreadCache][free][221]-> Freed 8 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2024-07-03 11:35:36 [DEBUG][io.netty.buffer.PoolThreadCache][free][221]-> Freed 19 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2024-07-03 11:35:36 [DEBUG][io.lettuce.core.resource.DefaultClientResources][shutdown][735]-> Initiate shutdown (0, 2, SECONDS)
2024-07-03 11:35:36 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][shutdown][317]-> Initiate shutdown (0, 2, SECONDS)
2024-07-03 11:35:36 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][destroy][452]-> Unregistering JMX-exposed beans on shutdown
2024-07-03 11:35:36 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][unregisterBeans][186]-> Unregistering JMX-exposed beans
2024-07-03 11:35:36 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][shutdown][220]-> Shutting down ExecutorService 'applicationTaskExecutor'
2024-07-03 11:35:36 [INFO][com.zaxxer.hikari.HikariDataSource][close][350]-> HikariCPDatasource - Shutdown initiated...
2024-07-03 11:35:36 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before shutdown stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:35:36 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3f11169: (connection evicted)
2024-07-03 11:35:36 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5f6d3765: (connection evicted)
2024-07-03 11:35:36 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7a404da3: (connection evicted)
2024-07-03 11:35:36 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1423465d: (connection evicted)
2024-07-03 11:35:36 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3b331567: (connection evicted)
2024-07-03 11:35:36 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2024-07-03 11:35:36 [INFO][com.zaxxer.hikari.HikariDataSource][close][352]-> HikariCPDatasource - Shutdown completed.
2024-07-03 11:54:05 [INFO][com.cultural.CulturalAdminApplication][logStarting][55]-> Starting CulturalAdminApplication using Java 1.8.0_202 on GeneMiniCom with PID 5844 (D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes started by 17673 in D:\Code\myworkspace-java\foxconn-cultural)
2024-07-03 11:54:05 [DEBUG][com.cultural.CulturalAdminApplication][logStarting][56]-> Running with Spring Boot v2.7.13, Spring v5.3.28
2024-07-03 11:54:05 [INFO][com.cultural.CulturalAdminApplication][logStartupProfileInfo][631]-> No active profile set, falling back to 1 default profile: "default"
2024-07-03 11:54:05 [DEBUG][org.springframework.boot.SpringApplication][load][664]-> Loading source class com.cultural.CulturalAdminApplication
2024-07-03 11:54:05 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][prepareRefresh][629]-> Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60
2024-07-03 11:54:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2024-07-03 11:54:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\aspect\OperationAspect.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\AGlobalExceptionHandlerController.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\FileController.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\LoginController.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysAccountController.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysAreaController.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysColumnController.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysMenuController.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysRoleController.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-admin\target\classes\com\cultural\controller\SysTagController.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\entity\config\AdminConfig.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\entity\config\AppConfig.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysAccountServiceImpl.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysAreaServiceImpl.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysColumnServiceImpl.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysMenuServiceImpl.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysRole2MenuServiceImpl.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysRoleServiceImpl.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\service\impl\SysTagServiceImpl.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\utils\FileUtils.class]
2024-07-03 11:54:05 [DEBUG][org.springframework.context.annotation.ClassPathBeanDefinitionScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\utils\ImageUtils.class]
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\BaseMapper.class]
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysAccountMapper.class]
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysAreaMapper.class]
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysColumnMapper.class]
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysMenuMapper.class]
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysRole2MenuMapper.class]
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysRoleMapper.class]
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][scanCandidateComponents][435]-> Identified candidate component class: file [D:\Code\myworkspace-java\foxconn-cultural\cultural-common\target\classes\com\cultural\mappers\SysTagMapper.class]
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'baseMapper' and 'com.cultural.mappers.BaseMapper' mapperInterface
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'baseMapper'.
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysAccountMapper' and 'com.cultural.mappers.SysAccountMapper' mapperInterface
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysAccountMapper'.
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysAreaMapper' and 'com.cultural.mappers.SysAreaMapper' mapperInterface
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysAreaMapper'.
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysColumnMapper' and 'com.cultural.mappers.SysColumnMapper' mapperInterface
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysColumnMapper'.
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysMenuMapper' and 'com.cultural.mappers.SysMenuMapper' mapperInterface
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysMenuMapper'.
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRole2MenuMapper' and 'com.cultural.mappers.SysRole2MenuMapper' mapperInterface
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRole2MenuMapper'.
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysRoleMapper' and 'com.cultural.mappers.SysRoleMapper' mapperInterface
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysRoleMapper'.
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][180]-> Creating MapperFactoryBean with name 'sysTagMapper' and 'com.cultural.mappers.SysTagMapper' mapperInterface
2024-07-03 11:54:05 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][processBeanDefinitions][216]-> Enabling autowire by type for MapperFactoryBean with name 'sysTagMapper'.
2024-07-03 11:54:05 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][multipleStoresDetected][262]-> Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03 11:54:05 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03 11:54:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2024-07-03 11:54:05 [DEBUG][org.springframework.boot.autoconfigure.AutoConfigurationPackages][get][196]-> @EnableAutoConfiguration was declared on a class in the package 'com.cultural'. Automatic @Repository and @Entity scanning is enabled.
2024-07-03 11:54:05 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cultural.
2024-07-03 11:54:05 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.ProxyAsyncConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory][getAdvice][258]-> Found AspectJ method: public void com.cultural.aspect.OperationAspect.interceptorDo(org.aspectj.lang.JoinPoint) throws com.cultural.exception.BusinessException
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionAttributeSource'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionInterceptor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2024-07-03 11:54:06 [DEBUG][org.springframework.ui.context.support.UiApplicationContextUtils][initThemeSource][85]-> Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@7c3e4b1a]
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageCustomizer'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServletRegistration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServlet'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartConfigElement'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getArchiveFileDocumentRoot][81]-> Code archive: D:\Code\other\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getExplodedWarFileDocumentRoot][125]-> Code archive: D:\Code\other\repo\org\springframework\boot\spring-boot\2.7.13\spring-boot-2.7.13.jar
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getValidDirectory][69]-> Document root: D:\Code\myworkspace-java\foxconn-cultural\public
2024-07-03 11:54:06 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][initialize][108]-> Tomcat initialized with port(s): 9090 (http)
2024-07-03 11:54:06 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Initializing ProtocolHandler ["http-nio-9090"]
2024-07-03 11:54:06 [INFO][org.apache.catalina.core.StandardService][log][173]-> Starting service [Tomcat]
2024-07-03 11:54:06 [INFO][org.apache.catalina.core.StandardEngine][log][173]-> Starting Servlet engine: [Apache Tomcat/9.0.76]
2024-07-03 11:54:06 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring embedded WebApplicationContext
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][286]-> Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-07-03 11:54:06 [INFO][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][292]-> Root WebApplicationContext: initialization completed in 987 ms
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepositoryFilterRegistration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionRepositoryFilterConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sessionRepositoryFilterRegistration' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@46ab18da'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestContextFilter'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'formContentFilter'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'characterEncodingFilter'
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping filters: springSessionRepositoryFilter urls=[/*] order=-2147483598, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][237]-> Mapping servlets: dispatcherServlet urls=[/]
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter][init][242]-> Filter 'requestContextFilter' configured for use
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1][init][242]-> Filter 'springSessionRepositoryFilter' configured for use
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter][init][242]-> Filter 'characterEncodingFilter' configured for use
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedFormContentFilter][init][242]-> Filter 'formContentFilter' configured for use
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'culturalAdminApplication'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'operationAspect'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'AGlobalExceptionHandlerController'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'fileController'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'adminConfig'
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'project.folder' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'super.admin.phones' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'admin.account' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'admin.password' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'web.api.url' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'loginController'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountService'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountMapper'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionFactory'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.core.LocalVariableTableParameterNameDiscoverer][inspectClass][105]-> Cannot find '.class' file for class [class org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3a0fa3be] - unable to determine constructor/method parameter names
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSource'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-07-03 11:54:06 [DEBUG][com.zaxxer.hikari.HikariConfig][attemptFromContextLoader][971]-> Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2024-07-03 11:54:06 [DEBUG][org.apache.ibatis.logging.LogFactory][setImplementation][135]-> Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2024-07-03 11:54:06 [DEBUG][org.mybatis.spring.SqlSessionFactoryBean][buildSqlSessionFactory][534]-> Property 'mapperLocations' was not specified or no matching resources found
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionTemplate'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuService'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuMapper'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'appConfig'
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'project.folder' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appKey' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'inner.api.appSecret' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'Config resource 'class path resource [application.properties]' via location 'optional:classpath:/'' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'isDev' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'super.admin.phones' in PropertySource 'environmentProperties' with value of type String
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAccountController'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAreaController'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAreaService'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysAreaMapper'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'fileUtils'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysColumnController'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysColumnService'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysColumnMapper'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysMenuController'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleController'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleService'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRoleMapper'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuMapper'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysTagController'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysTagService'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysTagMapper'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sysRole2MenuService'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'imageUtils'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'baseMapper'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskExecutorBuilder'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'error'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameViewResolver'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'conventionErrorViewResolver'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorAttributes'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'basicErrorController'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@46ab18da'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@46ab18da'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcConversionService'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcValidator'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'messageConverters'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringHttpMessageConverter'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonObjectMapper'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'parameterNamesModule'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonComponentModule'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonMixinModule'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonGeoModule'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortResolver'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortCustomizer'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableResolver'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableCustomizer'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationTaskExecutor'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2024-07-03 11:54:06 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][initialize][184]-> Initializing ExecutorService 'applicationTaskExecutor'
2024-07-03 11:54:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][625]-> ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:54:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeResolver'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'themeResolver'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'flashMapManager'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:54:07 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.FileController:
	{ [/file/getAvatar/{userId}]}: getAvatar(HttpServletResponse,String)
	{ [/file/getImage/{imageFolder}/{imageName}]}: readPic(String,String,HttpServletResponse)
2024-07-03 11:54:07 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.LoginController:
	{ [/logout]}: logout(HttpSession)
	{ [/updateMyPwd]}: updateMyPwd(HttpSession,String)
	{ [/checkCode]}: checkCode(HttpServletResponse,HttpSession)
	{ [/login]}: login(HttpSession,String,String,String)
2024-07-03 11:54:07 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysAccountController:
	{ [/settings/updateStatus]}: updateStatus(Integer,Integer)
	{ [/settings/saveAccount]}: saveAccount(SysAccount)
	{ [/settings/updatePassword]}: updatePassword(Integer,String)
	{ [/settings/loadAccountList]}: loadDataList(SysAccountQuery)
	{ [/settings/delAccount]}: delAccount(Integer)
2024-07-03 11:54:07 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysAreaController:
	{ [/content/areaList]}: areaList(SysAreaQuery)
	{ [/content/saveArea]}: saveArea(Integer,String,Integer,Integer,String,Integer,String)
	{ [/content/delArea]}: delArea(Integer)
2024-07-03 11:54:07 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysColumnController:
	{ [/content/columnList]}: loadDataList(SysColumnQuery)
	{ [/content/delColumn]}: delMenu(Integer)
	{ [/content/saveColumn]}: saveMenu(SysColumn,MultipartFile)
	{ [/content/opColStatus]}: opColStatus(Integer,Integer)
	{ [/content/loadAllColumn4Select]}: loadAllColumn4Select(Integer)
2024-07-03 11:54:07 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysMenuController:
	{ [/settings/delMenu]}: delMenu(Integer)
	{ [/settings/saveMenu]}: saveMenu(SysMenu)
	{ [/settings/menuList]}: menuList()
2024-07-03 11:54:07 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysRoleController:
	{ [/settings/saveRole]}: saveRole(SysRole,String,String)
	{ [/settings/loadAllRoles]}: loadAllRoles()
	{ [/settings/getRoleByRoleId]}: getRoleByRoleId(Integer)
	{ [/settings/loadRoles]}: loadRoles(SysRoleQuery)
	{ [/settings/saveRoleMenu]}: saveRoleMenu(Integer,String,String)
	{ [/settings/delRole]}: delRole(Integer)
2024-07-03 11:54:07 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.SysTagController:
	{ [/content/saveTag]}: saveAccount(SysTag)
	{ [/content/delTag]}: delAccount(Integer)
	{ [/content/tagList]}: tagList(SysTagQuery)
2024-07-03 11:54:07 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-07-03 11:54:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 33 mappings in 'requestMappingHandlerMapping'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPatternParser'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUrlPathHelper'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPathMatcher'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameHandlerMapping'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:54:07 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlers][86]-> 'beanNameHandlerMapping' {}
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'routerFunctionMapping'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'resourceHandlerMapping'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-07-03 11:54:07 [DEBUG][org.springframework.web.servlet.config.annotation.WebMvcConfigurer][addResourceHandlers][335]-> Default resource handling disabled
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerFunctionAdapter'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerExceptionResolver'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:54:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][initExceptionHandlerAdviceCache][307]-> ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcViewResolver'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewNameTranslator'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultViewResolver'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@46ab18da'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerViewResolver'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'spring.jmx-org.springframework.boot.autoconfigure.jmx.JmxProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanExporter'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'objectNamingStrategy'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@46ab18da'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanServer'
2024-07-03 11:54:07 [DEBUG][org.springframework.jmx.support.JmxUtils][locateMBeanServer][127]-> Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@591f989e
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2024-07-03 11:54:07 [DEBUG][org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin][afterPropertiesSet][131]-> Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationAvailability'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lettuceClientResources'
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.logging.InternalLoggerFactory][useSlf4JLoggerFactory][63]-> Using SLF4J as the default logging framework
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.resource.AddressResolverGroupProvider][<clinit>][37]-> Starting without optional netty's non-blocking DNS resolver library
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<clinit>][122]-> -Dio.netty.eventLoopThreads: 16
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2024-07-03 11:54:07 [DEBUG][io.netty.util.concurrent.GlobalEventExecutor][<clinit>][53]-> -Dio.netty.globalEventExecutor.quietPeriodSeconds: 1
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][100]-> -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][101]-> -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2024-07-03 11:54:07 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][129]-> -Dio.netty.leakDetection.level: simple
2024-07-03 11:54:07 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][130]-> -Dio.netty.leakDetection.targetRecords: 4
2024-07-03 11:54:07 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@401317a0
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent0][explicitNoUnsafeCause0][497]-> -Dio.netty.noUnsafe: false
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent0][javaVersion0][1001]-> Java version: 8
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][137]-> sun.misc.Unsafe.theUnsafe: available
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][161]-> sun.misc.Unsafe.copyMemory: available
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][193]-> sun.misc.Unsafe.storeFence: available
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][236]-> java.nio.Buffer.address: available
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][308]-> direct buffer constructor: available
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][386]-> java.nio.Bits.unaligned: available, true
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][460]-> jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][483]-> java.nio.DirectByteBuffer.<init>(long, {int,long}): available
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent][unsafeUnavailabilityCause0][1159]-> sun.misc.Unsafe: available
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent][tmpdir0][1289]-> -Dio.netty.tmpdir: C:\Users\17673\AppData\Local\Temp (java.io.tmpdir)
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent][bitMode0][1368]-> -Dio.netty.bitMode: 64 (sun.arch.data.model)
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent][isWindows0][1119]-> Platform: Windows
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][178]-> -Dio.netty.maxDirectMemory: 7098859520 bytes
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][185]-> -Dio.netty.uninitializedArrayAllocationThreshold: -1
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.CleanerJava6][<clinit>][92]-> java.nio.ByteBuffer.cleaner(): available
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][205]-> -Dio.netty.noPreferDirect: false
2024-07-03 11:54:07 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][1010]-> org.jctools-core.MpscChunkedArrayQueue: available
2024-07-03 11:54:07 [DEBUG][reactor.util.Loggers][debug][254]-> Using Slf4j logging framework
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.event.jfr.EventRecorderHolder][<clinit>][55]-> Starting without optional JFR support. JFR unavailable.
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<init>][227]-> LatencyUtils/HdrUtils are not available, metrics are disabled
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConnectionFactory'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisTemplate'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringRedisTemplate'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'java.lang.Object'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lifecycleProcessor'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveRedisTemplate'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'keyValueMappingContext'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisCustomConversions'
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisReferenceResolver'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConverter'
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.String as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Number to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Number as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Enum to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Enum as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.Boolean to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.lang.Boolean as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.Date as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.UUID to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.util.UUID as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class [B as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class [B to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.time.Period to class java.lang.String as writing converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Period as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][301]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueAdapter'
2024-07-03 11:54:07 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][start][246]-> Starting RedisMessageListenerContainer...
2024-07-03 11:54:07 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][lazyListen][290]-> Postpone listening for Redis messages until actual listeners are added.
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueTemplate'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfigurer'
2024-07-03 11:54:07 [DEBUG][org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer][getTemplateLoaderForPath][362]-> File system access not preferred: using SpringTemplateLoader
2024-07-03 11:54:07 [DEBUG][org.springframework.ui.freemarker.SpringTemplateLoader][<init>][62]-> SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60, started on Wed Jul 03 11:54:05 GMT+08:00 2024] and template loader path [classpath:/templates/]
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'freeMarkerConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'freeMarkerConfiguration' via factory method to bean named 'freeMarkerConfigurer'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration' via constructor to bean named 'spring.freemarker-org.springframework.boot.autoconfigure.freemarker.FreeMarkerProperties'
2024-07-03 11:54:07 [WARN][org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration][checkTemplateLocationExists][65]-> Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.check-template-location=false)
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jdbcTemplate'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration' via constructor to bean named 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryImplementationValidator'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryImplementationValidator' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryImplementationValidator' via constructor to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.RedisSessionConfiguration$SpringBootRedisHttpSessionConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cookieSerializer'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'cookieSerializer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'configureRedisAction'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.RedisSessionConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.session.redis-org.springframework.boot.autoconfigure.session.RedisSessionProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'configureRedisAction' via factory method to bean named 'spring.session.redis-org.springframework.boot.autoconfigure.session.RedisSessionProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionRepository'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'org.springframework.boot.autoconfigure.session.RedisSessionConfiguration$SpringBootRedisHttpSessionConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration' via constructor to bean named 'sessionRepository'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRedisMessageListenerContainer'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRedisMessageListenerContainer' via factory method to bean named 'sessionRepository'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'enableRedisKeyspaceNotificationsInitializer'
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.RedisClient][connectStandaloneAsync][273]-> Trying to get a Redis connection for: redis://127.0.0.1?timeout=2s
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][157]-> -Dio.netty.allocator.numHeapArenas: 32
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][158]-> -Dio.netty.allocator.numDirectArenas: 32
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][160]-> -Dio.netty.allocator.pageSize: 8192
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][165]-> -Dio.netty.allocator.maxOrder: 9
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][169]-> -Dio.netty.allocator.chunkSize: 4194304
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][170]-> -Dio.netty.allocator.smallCacheSize: 256
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][171]-> -Dio.netty.allocator.normalCacheSize: 64
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][172]-> -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][173]-> -Dio.netty.allocator.cacheTrimInterval: 8192
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][174]-> -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][175]-> -Dio.netty.allocator.useCacheForAllThreads: false
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][176]-> -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][88]-> -Dio.netty.allocator.type: pooled
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][97]-> -Dio.netty.threadLocalDirectBufferSize: 0
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][100]-> -Dio.netty.maxThreadLocalCharBufferSize: 16384
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.resource.KqueueProvider][<clinit>][73]-> Starting without optional kqueue library
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.resource.IOUringProvider][<clinit>][75]-> Starting without optional io_uring library
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.resource.EpollProvider][<clinit>][76]-> Starting without optional epoll library
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][allocate][112]-> Allocating executor io.netty.channel.nio.NioEventLoopGroup
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.channel.nio.NioEventLoopGroup
2024-07-03 11:54:07 [DEBUG][io.netty.channel.MultithreadEventLoopGroup][<clinit>][44]-> -Dio.netty.eventLoopThreads: 32
2024-07-03 11:54:07 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][110]-> -Dio.netty.noKeySetOptimization: false
2024-07-03 11:54:07 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][111]-> -Dio.netty.selectorAutoRebuildThreshold: 512
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][addReference][128]-> Adding reference to io.netty.channel.nio.NioEventLoopGroup@5477d90e, existing ref count 0
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1?timeout=2s
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2024-07-03 11:54:07 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][79]-> -Dio.netty.processId: 5844 (auto-detected)
2024-07-03 11:54:07 [DEBUG][io.netty.util.NetUtil][<clinit>][148]-> -Djava.net.preferIPv4Stack: false
2024-07-03 11:54:07 [DEBUG][io.netty.util.NetUtil][<clinit>][149]-> -Djava.net.preferIPv6Addresses: false
2024-07-03 11:54:07 [DEBUG][io.netty.util.NetUtilInitializations][determineLoopback][145]-> Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2024-07-03 11:54:07 [DEBUG][io.netty.util.NetUtil][run][206]-> Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2024-07-03 11:54:07 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][101]-> -Dio.netty.machineId: 4c:d5:77:ff:fe:f0:e3:c5 (auto-detected)
2024-07-03 11:54:07 [DEBUG][io.netty.util.Recycler][<clinit>][96]-> -Dio.netty.recycler.maxCapacityPerThread: 4096
2024-07-03 11:54:07 [DEBUG][io.netty.util.Recycler][<clinit>][97]-> -Dio.netty.recycler.ratio: 8
2024-07-03 11:54:07 [DEBUG][io.netty.util.Recycler][<clinit>][98]-> -Dio.netty.recycler.chunkSize: 32
2024-07-03 11:54:07 [DEBUG][io.netty.util.Recycler][<clinit>][99]-> -Dio.netty.recycler.blocking: false
2024-07-03 11:54:07 [DEBUG][io.netty.util.Recycler][<clinit>][100]-> -Dio.netty.recycler.batchFastThreadLocalOnly: true
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][63]-> -Dio.netty.buffer.checkAccessible: true
2024-07-03 11:54:07 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][64]-> -Dio.netty.buffer.checkBounds: true
2024-07-03 11:54:07 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@49890d15
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=CONFIG, output=MapOutput [output=AsyncCommand [type=CONFIG, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sessionEventHttpSessionListenerAdapter'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springSessionRepositoryFilter'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springSessionRepositoryFilter' via factory method to bean named 'sessionRepository'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$ServletSessionRepositoryConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionRepositoryValidator' via constructor to bean named 'spring.session-org.springframework.boot.autoconfigure.session.SessionProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.session.SessionAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskSchedulerBuilder'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionManager'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionTemplate'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2024-07-03 11:54:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartResolver'
2024-07-03 11:54:07 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][434]-> Registering beans for JMX exposure on startup
2024-07-03 11:54:07 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-07-03 11:54:07 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][896]-> Bean with name 'dataSource' has been autodetected for JMX exposure
2024-07-03 11:54:07 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][669]-> Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2024-07-03 11:54:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase -2147483647
2024-07-03 11:54:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springBootLoggingLifecycle'
2024-07-03 11:54:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483646
2024-07-03 11:54:07 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Starting ProtocolHandler ["http-nio-9090"]
2024-07-03 11:54:07 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][start][220]-> Tomcat started on port(s): 9090 (http) with context path '/api'
2024-07-03 11:54:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerStartStop'
2024-07-03 11:54:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483647
2024-07-03 11:54:07 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][start][246]-> Starting RedisMessageListenerContainer...
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1?timeout=2s
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:54:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:54:07 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][doSubscribe][339]-> Subscribing to topics for RedisMessageListenerContainer.
2024-07-03 11:54:07 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][lambda$doSubscribe$0][324]-> RedisMessageListenerContainer listeners registered successfully.
2024-07-03 11:54:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'springSessionRedisMessageListenerContainer'
2024-07-03 11:54:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerGracefulShutdown'
2024-07-03 11:54:07 [DEBUG][org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener][logAutoConfigurationReport][126]-> 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'freemarker.template.Configuration', 'org.springframework.ui.freemarker.FreeMarkerConfigurationFactory' (OnClassCondition)

   FreeMarkerServletWebConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#freeMarkerConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.freemarker.FreeMarkerConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   FreeMarkerServletWebConfiguration#freeMarkerViewResolver matched:
      - @ConditionalOnProperty (spring.freemarker.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (names: freeMarkerViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#redisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisSessionConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.core.RedisTemplate', 'org.springframework.session.data.redis.RedisIndexedSessionRepository' (OnClassCondition)
      - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.session.SessionRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisSessionConfiguration#configureRedisAction matched:
      - @ConditionalOnMissingBean (types: org.springframework.session.data.redis.config.ConfigureRedisAction; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SessionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.session.Session' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration#cookieSerializer matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.CookieHttpSessionIdResolverAvailable found non-matching nested conditions @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver, @ConditionalOnBean (types: org.springframework.session.web.http.CookieHttpSessionIdResolver; SearchStrategy: all) did not find any beans of type org.springframework.session.web.http.CookieHttpSessionIdResolver; NestedCondition on SessionAutoConfiguration.DefaultCookieSerializerCondition.NoComponentsAvailable @ConditionalOnMissingBean (types: org.springframework.session.web.http.HttpSessionIdResolver,org.springframework.session.web.http.CookieSerializer; SearchStrategy: all) did not find any beans (SessionAutoConfiguration.DefaultCookieSerializerCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.ServletSessionRepositoryConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.session.SessionRepository; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SessionRepositoryFilterConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.session.web.http.SessionRepositoryFilter; SearchStrategy: all) found bean 'springSessionRepositoryFilter' (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   Cache2kCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerNonWebConfiguration:
      Did not match:
         - @ConditionalOnWebApplication found 'session' scope and did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerReactiveWebConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   FreeMarkerServletWebConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   GraphQlAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlRSocketAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQueryByExampleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlReactiveQuerydslAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebFluxSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GraphQlWebMvcSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.hazelcast.HazelcastIndexedSessionRepository' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.jdbc.JdbcIndexedSessionRepository' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoSessionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoOperations' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperFactoryBean' &baseMapper, &sysAccountMapper, &sysAreaMapper, &sysColumnMapper, &sysMenuMapper, &sysRole2MenuMapper, &sysRoleMapper, &sysTagMapper (OnBeanCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NoOpSessionConfiguration:
      Did not match:
         - Session Condition found spring.session.store-type property REDIS (ServletSessionCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketGraphQlClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration.ReactiveSessionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SessionAutoConfiguration.ServletSessionConfiguration.RememberMeServicesConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.authentication.RememberMeServices' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.SchedulingConfigurer,org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) found beans of type 'org.springframework.scheduling.annotation.SchedulingConfigurer' org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$SessionCleanupConfiguration (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-07-03 11:54:07 [INFO][org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor][finishRegistration][315]-> No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2024-07-03 11:54:07 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-07-03 11:54:07 [INFO][com.cultural.CulturalAdminApplication][logStarted][61]-> Started CulturalAdminApplication in 2.768 seconds (JVM running for 3.347)
2024-07-03 11:54:07 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state LivenessState changed to CORRECT
2024-07-03 11:54:07 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-07-03 11:54:19 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03 11:54:19 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][525]-> Initializing Servlet 'dispatcherServlet'
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][522]-> Detected StandardServletMultipartResolver
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][546]-> Detected AcceptHeaderLocaleResolver
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][571]-> Detected FixedThemeResolver
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][721]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@45bbc52f
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][785]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@7ceb6c45
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initServletBean][542]-> enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-03 11:54:19 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][547]-> Completed initialization in 1 ms
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][120]-> POST "/api/content/saveTag", parameters={multipart}
2024-07-03 11:54:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-07-03 11:54:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=HGETALL, output=MapOutput [output=AsyncCommand [type=HGETALL, output=MapOutput [output={}, error='null'], commandType=io.lettuce.core.protocol.Command], error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:54:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-07-03 11:54:19 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cultural.controller.SysTagController#saveAccount(SysTag)
2024-07-03 11:54:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][getSqlSession][97]-> Creating a new SqlSession
2024-07-03 11:54:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][registerSessionHolder][148]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad0eccd] was not registered for synchronization because synchronization is not active
2024-07-03 11:54:19 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][117]-> Fetching JDBC Connection from DataSource
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1103]-> HikariCPDatasource - configuration:
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> allowPoolSuspension................................false
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> autoCommit................................true
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> catalog................................none
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionInitSql................................none
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTestQuery................................"SELECT 1"
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTimeout................................30000
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSource................................none
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceClassName................................none
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceJNDI................................none
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceProperties................................{password=<masked>}
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> driverClassName................................"com.mysql.cj.jdbc.Driver"
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> exceptionOverrideClassName................................none
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckProperties................................{}
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckRegistry................................none
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> idleTimeout................................180000
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> initializationFailTimeout................................1
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> isolateInternalQueries................................false
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> jdbcUrl................................jdbc:mysql://127.0.0.1:3306/cultural?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> keepaliveTime................................0
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> leakDetectionThreshold................................0
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maxLifetime................................1800000
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maximumPoolSize................................10
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricRegistry................................none
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricsTrackerFactory................................none
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> minimumIdle................................5
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> password................................<masked>
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> poolName................................"HikariCPDatasource"
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> readOnly................................false
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> registerMbeans................................false
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> scheduledExecutor................................none
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> schema................................none
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> threadFactory................................internal
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> transactionIsolation................................default
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> username................................"root"
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> validationTimeout................................5000
2024-07-03 11:54:19 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][110]-> HikariCPDatasource - Starting...
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][checkFailFast][565]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@641fe668
2024-07-03 11:54:19 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][123]-> HikariCPDatasource - Start completed.
2024-07-03 11:54:19 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][openConnection][87]-> JDBC Connection [HikariProxyConnection@1182915634 wrapping com.mysql.cj.jdbc.ConnectionImpl@641fe668] will not be managed by Spring
2024-07-03 11:54:19 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==>  Preparing: select tag_id,tag_name,tag_type,tag_color,create_time, last_update_time from sys_tag where tag_name=? 
2024-07-03 11:54:19 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> ==> Parameters: 鸿桥(String)
2024-07-03 11:54:19 [DEBUG][com.cultural.mappers.SysTagMapper.selectByTagName][debug][159]-> <==      Total: 1
2024-07-03 11:54:19 [DEBUG][org.mybatis.spring.SqlSessionUtils][closeSqlSession][191]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad0eccd]
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][doResolveHandlerMethodException][416]-> Using @ExceptionHandler com.cultural.controller.AGlobalExceptionHandlerController#handleException(Exception, HttpServletRequest)
2024-07-03 11:54:19 [ERROR][com.cultural.controller.AGlobalExceptionHandlerController][handleException][25]-> 请求错误，请求地址http://127.0.0.1:9090/api/content/saveTag,错误信息:
com.cultural.exception.BusinessException: 已有同名标签
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=1, active=0, idle=1, waiting=0)
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=1, active=0, idle=1, waiting=0)
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][120]-> Writing [com.cultural.entity.vo.ResponseVO@35d995fa]
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@a1d5e9a
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@2f302ef2
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][resolveException][146]-> Resolved [com.cultural.exception.BusinessException: 已有同名标签]
2024-07-03 11:54:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-07-03 11:54:19 [DEBUG][org.springframework.session.web.http.SessionRepositoryFilter.SESSION_LOGGER][getSession][305]-> No session found by id: Caching result for getSession(false) for this HttpServletRequest.
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@1d0e6078
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@63829b62
2024-07-03 11:54:19 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After adding stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:54:29 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-07-03 11:54:29 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][doClose][1051]-> Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fb6cf60, started on Wed Jul 03 11:54:05 GMT+08:00 2024
2024-07-03 11:54:29 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-07-03 11:54:29 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483647
2024-07-03 11:54:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=UNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:54:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PUNSUBSCRIBE, output=PubSubOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:54:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-07-03 11:54:29 [DEBUG][io.lettuce.core.RedisChannelHandler][closeAsync][141]-> closeAsync()
2024-07-03 11:54:29 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][doUnsubscribe][414]-> Stopped listening.
2024-07-03 11:54:29 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][stop][379]-> Stopped RedisMessageListenerContainer.
2024-07-03 11:54:29 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'springSessionRedisMessageListenerContainer' completed its stop procedure
2024-07-03 11:54:29 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerGracefulShutdown' completed its stop procedure
2024-07-03 11:54:29 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483646
2024-07-03 11:54:29 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerStartStop' completed its stop procedure
2024-07-03 11:54:29 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase -2147483647
2024-07-03 11:54:29 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'springBootLoggingLifecycle' completed its stop procedure
2024-07-03 11:54:29 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][stop][379]-> Stopped RedisMessageListenerContainer.
2024-07-03 11:54:29 [DEBUG][io.lettuce.core.RedisChannelHandler][closeAsync][141]-> closeAsync()
2024-07-03 11:54:29 [DEBUG][io.lettuce.core.AbstractRedisClient][shutdownAsync][539]-> Initiate shutdown (100, 100, MILLISECONDS)
2024-07-03 11:54:29 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][doRelease][281]-> Release executor io.netty.channel.nio.NioEventLoopGroup@5477d90e
2024-07-03 11:54:29 [DEBUG][io.netty.buffer.PoolThreadCache][free][221]-> Freed 7 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-2
2024-07-03 11:54:29 [DEBUG][io.netty.buffer.PoolThreadCache][free][221]-> Freed 5 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2024-07-03 11:54:29 [DEBUG][io.lettuce.core.resource.DefaultClientResources][shutdown][735]-> Initiate shutdown (0, 2, SECONDS)
2024-07-03 11:54:29 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][shutdown][317]-> Initiate shutdown (0, 2, SECONDS)
2024-07-03 11:54:29 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][destroy][452]-> Unregistering JMX-exposed beans on shutdown
2024-07-03 11:54:29 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][unregisterBeans][186]-> Unregistering JMX-exposed beans
2024-07-03 11:54:29 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][shutdown][220]-> Shutting down ExecutorService 'applicationTaskExecutor'
2024-07-03 11:54:29 [INFO][com.zaxxer.hikari.HikariDataSource][close][350]-> HikariCPDatasource - Shutdown initiated...
2024-07-03 11:54:29 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before shutdown stats (total=5, active=0, idle=5, waiting=0)
2024-07-03 11:54:29 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@641fe668: (connection evicted)
2024-07-03 11:54:29 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@a1d5e9a: (connection evicted)
2024-07-03 11:54:29 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2f302ef2: (connection evicted)
2024-07-03 11:54:29 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1d0e6078: (connection evicted)
2024-07-03 11:54:29 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@63829b62: (connection evicted)
2024-07-03 11:54:29 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2024-07-03 11:54:29 [INFO][com.zaxxer.hikari.HikariDataSource][close][352]-> HikariCPDatasource - Shutdown completed.
